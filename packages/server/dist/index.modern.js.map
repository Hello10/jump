{"version":3,"file":"index.modern.js","sources":["../src/Authorizers.js","../src/logger.js","../src/Collection.js","../src/timestampsToDates.js","../src/Errors.js","../src/FirestoreCollection.js","../src/Controller.js","../src/getToken.js","../src/contextBuilder.js","../src/directGraphqlRequest.js","../src/expose.js","../src/makeSchema.js","../src/formatError.js","../src/graphqlHandler.js","../src/processSchema.js"],"sourcesContent":["export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport Promise from 'bluebird';\n\nimport base_logger from './logger';\n\nconst logger = base_logger.child('Collection');\n\nexport default class Collection {\n  static get (args) {\n    return new this(args);\n  }\n\n  constructor ({getCollection, getLoader}) {\n    this.getCollection = getCollection;\n    this.getLoader = getLoader;\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, start_at, start_after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, start_at, start_after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas}) {\n    return Promise.map(datas, (data)=> this.create({data}));\n  }\n\n  async findOrCreate ({query, data}) {\n    const doc = await this.findOne({query});\n    return doc || this.create({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id}) {\n    return this.exists({id, assert: true});\n  }\n\n  async existsAll ({ids, assert = false}) {\n    const docs = await this.getAll({ids, assert});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids}) {\n    return this.existsAll({ids, assert: true});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id}) {\n    return this.get({id, assert: true});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids}) {\n    return this.getAll({ids, assert: true});\n  }\n\n  find (/* {query, limit, sort, start_at, start_after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query}) {\n    const docs = await this.find({query, select: ['id']});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, start_at, start_after} = {}) {\n    return this.find({limit, sort, start_at, start_after});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true}) {\n    return this.update({id, data, merge, assert: true});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false}) {\n    this._addUpdatedAt(data);\n    return Promise.map(ids, (id)=> {\n      return this.update({id, data, merge, assert});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true}) {\n    return this.update({ids, data, merge, assert: true});\n  }\n\n  async updateMany ({query, data, merge = true}) {\n    const ids = await this.findIds({query});\n    return this.updateAll({ids, data, merge});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id}) {\n    return this.delete({id, assert: true});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query}) {\n    const ids = await this.findIds({query});\n    return this.deleteAll({ids});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    return new DataLoader(async (ids)=> {\n      logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id, doc);\n      }\n\n      return ids.map((id)=> {\n        return lookup.has(id) ? lookup.get(id) : null;\n      });\n    });\n  }\n\n  load (id) {\n    if (!id) {\n      throw new Error('Missing id');\n    }\n    const loader = this.getLoader(this.name);\n    return loader.load(id);\n  }\n\n  loadMany (ids) {\n    if (!ids.length) {\n      return [];\n    }\n    const loader = this.getLoader(this.name);\n    return loader.loadMany(ids);\n  }\n\n  async loadManyCompact (ids) {\n    const docs = await this.loadMany(ids);\n    return compact(docs);\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this._timestamp();\n    }\n    this._addCreatedAt(obj, time);\n    this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    if (!('created_at' in obj)) {\n      obj.created_at = time || this._timestamp();\n    }\n    return obj;\n  }\n\n  _addUpdatedAt (obj, time) {\n    if (!('updated_at' in obj)) {\n      obj.updated_at = time || this._timestamp();\n    }\n    return obj;\n  }\n}\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from './Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    return this.add({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, start_at, start_after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = start_after || start_at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = start_after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    const ref = this.doc(id);\n    return ref.delete();\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","import {isFunction} from 'lodash';\n\nimport base_logger from './logger';\n\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from './Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class Controller {\n  constructor (options = {}) {\n    this.options = options;\n    this.logger = base_logger.child('Controller');\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  static resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection ({context, name}) {\n    return context.getCollection(name || this.name);\n  }\n\n  loader ({context, name}) {\n    return context.getLoader(name || this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            rlogger.info('Calling resolver', {obj, args});\n            return resolver.call(this, params);\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error('Unexpected GraphQL error', error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  get    = this._toCollection('get');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create')\n  update = this._wrapToCollection('update');\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const {id} = request.args;\n    const collection = this.collection(request);\n    const deleted = await collection.delete({id});\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      const collection = this.collection(request);\n      return collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const collection = this.collection(request);\n\n      let {data} = request.args;\n      if (this[before]) {\n        data = await this[before](request);\n      }\n\n      let doc = await collection[method]({data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n}\n","export default function getToken (request) {\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from './logger';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  Collections,\n  loadSession,\n  options,\n  getToken = getTokenDefault,\n  onLoad = ()=> {}\n}) {\n  let loaded = false;\n  return async ({req})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child({\n      name: 'contextBuilder',\n      req: {\n        url: req.url,\n        method: req.method,\n        protocol: req.protocol,\n        requestId: req.requestId,\n        ip: req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        headers: req.headers\n      }\n    });\n\n    if (!loaded) {\n      logger.debug('calling onLoad');\n      await onLoad();\n      loaded = true;\n    }\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    function getCollection (arg) {\n      const name = arg.name || arg;\n      const Collection = Collections[name];\n      if (!Collection) {\n        const msg = `Collection with name ${name} does not exist`;\n        logger.error(msg);\n        throw new Error(msg);\n      }\n\n      return Collection.get({\n        getCollection,\n        getLoader,\n        ...options\n      });\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    const token = getToken(req);\n    if (token) {\n      try {\n        ({session_id, user_id, user} = await loadSession({token, getCollection}));\n        logger.debug('Loaded session', {session_id, user});\n      } catch (error) {\n        logger.error('Error loading session', error);\n        load_user_error = error;\n      }\n    }\n\n    return {\n      getCollection,\n      getLoader,\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      ...options\n    };\n  };\n}\n","import {graphql} from 'graphql';\n\nimport logger from './logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({Schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(Schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n","import {merge} from 'lodash';\n\nimport logger from './logger';\n\nexport default function expose ({Controllers, Scalars, options}) {\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    // TODO: shouldn't need to instantiate each controller per request,\n    // just figure out the dispatch and then instantiate on demand unless\n    // there's some memoization that can be done between requests.\n    // that way context also becomes part of this instead of only request var\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\n\nimport expose from './expose';\n\nexport default function makeSchema ({Schema, Controllers, Scalars, options}) {\n  const resolvers = expose({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from './logger';\nimport {GraphQLError} from './Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport makeSchema from './makeSchema';\nimport formatErrorDefault from './formatError';\n\nexport default function graphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n\n  const schema = makeSchema({\n    options: opts_controller,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  const server = new ApolloServer({...opts_server, schema});\n  return server.createHandler(opts_handler);\n}\n","import {get, difference} from 'lodash';\n\nimport expose from './expose';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = expose({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n"],"names":["isExisting","context","user","isSignedIn","user_id","isPublic","logger","Logger","base_logger","child","Collection","get","args","constructor","getCollection","getLoader","name","Error","collection","create","createAll","datas","Promise","map","data","findOrCreate","query","doc","findOne","exists","existsAssert","id","assert","existsAll","ids","docs","getAll","every","existsAllAssert","getAssert","getAllAssert","find","sort","select","limit","length","findIds","list","start_at","start_after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","message","lookup","Map","set","has","load","loadMany","loadManyCompact","compact","_timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","updated_at","timestampsToDates","type","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","params","Function","expected","is","DoesNotExistError","missing","join","NotAuthorizedError","path","FirestoreCollection","options","Admin","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","cursor","invalid","field","parts","isObject","entries","value","Array","isArray","part","op","where","orderBy","start","fn","isNumber","batch","commit","omit","getOrAddById","x","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","Controller","_toCollection","_wrapToCollection","resolvers","expose","groups","group","definition","info","call","isFunction","resolver","authorizer","rlogger","load_user_error","authorized","error","resolveType","getType","schema","stub","request","beforeDelete","deleted","deleted_at","afterDelete","method","cmethod","before","after","getToken","header","prefix","match","replace","contextBuilder","Collections","loadSession","getTokenDefault","onLoad","loaded","req","url","protocol","requestId","ip","headers","connection","remoteAddress","loaders","arg","msg","session_id","token","directGraphqlRequest","Schema","variables","root","response","graphql","errors","Controllers","Scalars","controller","makeSchema","makeExecutableSchema","typeDefs","formatError","GraphQL","originalError","oerror","public_error","graphqlHandler","server","opts_server","handler","opts_handler","opts_controller","formatErrorDefault","ApolloServer","createHandler","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema"],"mappings":"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"}