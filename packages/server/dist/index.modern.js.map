{"version":3,"file":"index.modern.js","sources":["../src/Authorizers.js","../src/Collection.js","../src/timestampsToDates.js","../src/Errors.js","../src/FirestoreCollection.js","../src/logger.js","../src/Controller.js","../src/getToken.js","../src/contextBuilder.js","../src/directGraphqlRequest.js","../src/expose.js","../src/makeSchema.js","../src/formatError.js","../src/graphqlHandler.js","../src/processSchema.js"],"sourcesContent":["export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import DataLoader from 'dataloader';\n\nexport default class Collection {\n  static get (args) {\n    return new this(args);\n  }\n\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  get loader () {\n    return new DataLoader((ids)=> {\n      return this.getMany({ids});\n    });\n  }\n\n  //////////\n  // CRUD //\n  //////////\n\n  // TODO: generalize the safe thing derp\n\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  exists (/* {id} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  get (/* {id, safe = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getSafe ({id}) {\n    return this.get({id, safe: true});\n  }\n\n  getMany (/* {ids, safe = false} */) {\n    throw new Error('Collection child class must implement .getMany');\n  }\n\n  getManySafe ({ids}) {\n    return this.getMany({ids, safe: true});\n  }\n\n  find () {\n    // TODO:\n  }\n\n  set (/* {id, data, safe = false} */) {\n    throw new Error('Collection child class must implement .set');\n  }\n\n  setSafe ({id, data}) {\n    return this.setMany({id, data, safe: true});\n  }\n\n  merge (/* {id, data, safe = false} */) {\n    throw new Error('Collection child class must implement .merge');\n  }\n\n  mergeSafe ({id, data}) {\n    return this.merge({id, data, safe: true});\n  }\n\n  delete (/* {id, safe = false} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteSafe ({id}) {\n    return this.delete({id, safe: true});\n  }\n}\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  }) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DocumentDoesNotExistError extends GraphQLError {\n  constructor (params) {\n    const {type, id} = params;\n    super({\n      code: 'DocumentDoesNotExist',\n      message: `Document ${type} with id ${id} does not exist`,\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DocumentDoesNotExistError} from './Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor ({Admin, app, getCollection, getLoader}) {\n    super();\n    this.Admin = Admin;\n    this.app = app;\n    this.getCollection = getCollection;\n    this.getLoader = getLoader;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  //////////\n  // CRUD //\n  //////////\n  async add ({data}) {\n    data = omit(data, 'id');\n    const timestamp = this._timestampField();\n    data.created_at = timestamp;\n    data.updated_at = timestamp;\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async set ({id, data, merge = true}) {\n    data = omit(data, 'id');\n    data.updated_at = this._timestampField();\n    const ref = this.doc(id);\n    await ref.set(data, {merge});\n    return this.get({id});\n  }\n\n  async addOrSetByField ({field, data, add = (x)=> x}) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  async exists ({id}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    return snap.exists;\n  }\n\n  async get ({id, safe = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (safe && !snap.exists) {\n      const type = this.name();\n      throw new DocumentDoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAssert ({id}) {\n    return this.get({id, safe: true});\n  }\n\n  async getMany ({ids}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    return ids.map((id)=> {\n      return (id in docs_by_id) ? docs_by_id[id] : null;\n    });\n  }\n\n  async find ({where, limit, order_by, select} = {}) {\n    let query = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (where) {\n      let parts;\n      if (isObject(where)) {\n        parts = Object.entries(where).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(where)) {\n        parts = Array.isArray(where[0]) ? where : [where];\n      } else {\n        invalid('where');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('where');\n        }\n        const [field, op, value] = part;\n        query = query.where(field, op, value);\n      }\n    }\n\n    if (order_by) {\n      if (!Array.isArray(order_by)) {\n        order_by = [order_by];\n      }\n      query = query.orderBy(...order_by);\n    }\n\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      query = query.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      query = query.select(...select);\n    }\n\n    const snap = await query.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  async findOne ({where, order_by, select}) {\n    const docs = await this.find({\n      limit: 1,\n      where,\n      order_by,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        where: [field, '==', value]\n      });\n    };\n  }\n\n  async delete ({id, ids, where}) {\n    if (id) {\n      const ref = this.doc(id);\n      return ref.delete();\n    }\n\n    if (ids && where) {\n      throw new Error('Delete call should pass ids or where not both');\n    }\n\n    if (where) {\n      const docs = await this.find({where});\n      ids = docs.map(({id})=> id);\n    }\n\n    if (ids.length === 0) {\n      return Promise.resolve();\n    }\n\n    const batch = this.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestampField () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import {isFunction} from 'lodash';\n\nimport base_logger from './logger';\n\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from './Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class Controller {\n  constructor (options = {}) {\n    this.options = options;\n    this.logger = base_logger.child('Controller');\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  static resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection ({context, name}) {\n    return context.getCollection(name || this.name);\n  }\n\n  loader ({context, name}) {\n    return context.getLoader(name || this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            rlogger.info('Calling resolver', {obj, args});\n            return resolver.call(this, params);\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error('Unexpected GraphQL error', error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n  // Delegate all the reads derp\n  // TODO: move to loop at end adding to proto\n  exists = this._toCollection('exists');\n  get = this._toCollection('get');\n  list = this._toCollection('list');\n  create = this._wrapToCollection('create')\n  set = this._wrapToCollection('set');\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const {id} = request.args;\n    const deleted = await this.delete({id});\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      const collection = this.collection(request);\n      return collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const collection = this.collection(request);\n\n      let {data} = request.args;\n      if (this[before]) {\n        data = await this[before](request);\n      }\n\n      let doc = await collection[method]({data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n}\n","export default function getToken (request) {\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from './logger';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  Collections,\n  loadSession,\n  options,\n  getToken = getTokenDefault,\n  onLoad = ()=> {}\n}) {\n  let loaded = false;\n  return async ({req})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child({\n      name: 'contextBuilder',\n      req: {\n        url: req.url,\n        method: req.method,\n        protocol: req.protocol,\n        requestId: req.requestId,\n        ip: req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        headers: req.headers\n      }\n    });\n\n    if (!loaded) {\n      logger.debug('calling onLoad');\n      await onLoad();\n      loaded = true;\n    }\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    function getCollection (arg) {\n      const name = arg.name || arg;\n      const Collection = Collections[name];\n      if (!Collection) {\n        const msg = `Collection with name ${name} does not exist`;\n        logger.error(msg);\n        throw new Error(msg);\n      }\n\n      return Collection.get({\n        getCollection,\n        getLoader,\n        ...options\n      });\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    const token = getToken(req);\n    if (token) {\n      try {\n        ({session_id, user_id, user} = await loadSession({token, getCollection}));\n        logger.debug('Loaded session', {session_id, user});\n      } catch (error) {\n        logger.error('Error loading session', error);\n        load_user_error = error;\n      }\n    }\n\n    return {\n      getCollection,\n      getLoader,\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      ...options\n    };\n  };\n}\n","import {graphql} from 'graphql';\n\nimport logger from './logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({Schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(Schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n","import {merge} from 'lodash';\n\nimport logger from './logger';\n\nexport default function expose ({Controllers, Scalars, options}) {\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    // TODO: shouldn't need to instantiate each controller per request,\n    // just figure out the dispatch and then instantiate on demand unless\n    // there's some memoization that can be done between requests.\n    // that way context also becomes part of this instead of only request var\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\n\nimport expose from './expose';\n\nexport default function makeSchema ({Schema, Controllers, Scalars, options}) {\n  const resolvers = expose({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","import * as GraphQL from 'graphql';\n\nimport {GraphQLError} from './Errors';\n\nexport default function formatError (error) {\n  console.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport makeSchema from './makeSchema';\nimport formatErrorDefault from './formatError';\n\nexport default function graphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n\n  const schema = makeSchema({\n    options: opts_controller,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  const server = new ApolloServer({...opts_server, schema});\n  return server.createHandler(opts_handler);\n}\n","import {get, difference} from 'lodash';\n\nimport expose from './expose';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = expose({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n"],"names":["isExisting","context","user","isSignedIn","user_id","isPublic","Collection","get","args","name","Error","collection","loader","DataLoader","ids","getMany","create","exists","getSafe","id","safe","getManySafe","find","set","setSafe","data","setMany","merge","mergeSafe","delete","deleteSafe","timestampsToDates","obj","type","constructor","map","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","message","params","Function","expected","is","DocumentDoesNotExistError","NotAuthorizedError","path","FirestoreCollection","Admin","app","getCollection","getLoader","auth","firestore","doc","add","omit","timestamp","_timestampField","created_at","updated_at","ref","addOrSetByField","field","x","value","findOneByField","getOrAddById","snap","_snapToDoc","getAssert","length","uniques","uniq","refs","snaps","getAll","docs","docs_by_id","where","limit","order_by","select","query","invalid","parts","isObject","entries","Array","isArray","part","op","orderBy","isNumber","findOne","Promise","resolve","batch","commit","FieldValue","serverTimestamp","_deleteField","_id","logger","Logger","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","Controller","options","_toCollection","list","_wrapToCollection","base_logger","child","resolvers","expose","groups","group","definition","info","call","isFunction","resolver","authorizer","rlogger","debug","load_user_error","authorized","error","request","beforeDelete","deleted","deleted_at","Date","afterDelete","method","cmethod","before","after","load","loadMany","resolveType","getType","schema","stub","getToken","header","prefix","match","replace","contextBuilder","Collections","loadSession","getTokenDefault","onLoad","loaded","req","url","protocol","requestId","ip","headers","connection","remoteAddress","loaders","arg","msg","session_id","token","directGraphqlRequest","Schema","variables","root","response","graphql","errors","Controllers","Scalars","controller","makeSchema","makeExecutableSchema","typeDefs","formatError","console","GraphQL","originalError","oerror","public_error","graphqlHandler","server","opts_server","handler","opts_handler","opts_controller","formatErrorDefault","ApolloServer","createHandler","processDefinitions","definitions","enums","Query","Mutation","Type","kind","push","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema"],"mappings":"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"}