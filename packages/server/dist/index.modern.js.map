{"version":3,"file":"index.modern.js","sources":["../src/Errors.js","../src/logger.js","../src/initialize.js","../src/collections/Collection.js","../src/collections/timestampsToDates.js","../src/collections/FirestoreCollection.js","../src/handlers/graphql/Authorizers.js","../src/handlers/addInstanceGetters.js","../src/handlers/graphql/getToken.js","../src/handlers/graphql/contextBuilder.js","../src/handlers/graphql/formatError.js","../src/handlers/graphql/exposeResolvers.js","../src/handlers/graphql/makeSchema.js","../src/handlers/graphql/createGraphqlHandler.js","../src/handlers/graphql/directGraphqlRequest.js","../src/handlers/graphql/directGraphqlRequester.js","../src/handlers/graphql/GraphQLController.js","../src/handlers/graphql/processSchema.js","../src/handlers/http/createHttpHandler.js","../src/handlers/Handler.js","../src/handlers/http/HttpHandler.js","../src/handlers/pubsub/createPubSubHandler.js","../src/handlers/pubsub/PubSubHandler.js"],"sourcesContent":["import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'Server error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import default_logger from './logger';\n\nexport default function initialize (options) {\n  const {namespace} = options;\n  const required = [\n    'Admin',\n    'Enums',\n    'getCollection',\n    'getService'\n  ];\n  for (const name of required) {\n    if (!options[name]) {\n      throw new Error(`Missing required argument for ${namespace}: ${name}`);\n    }\n    this[name] = options[name];\n  }\n\n  let {logger} = options;\n  if (!logger) {\n    logger = default_logger;\n  }\n  this.logger = logger.child(`${namespace}:${this.name}`);\n}\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport {mapp, singleton} from '@hello10/util';\n\nimport initialize from '../initialize';\n\nexport default class Collection {\n  constructor (options) {\n    initialize.call(this, {namespace: 'Collection', ...options});\n  }\n\n  bucket (name) {\n    return this.Admin.storage().bucket(name);\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, at, after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, at, after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas, ...options}) {\n    return mapp(datas, (data)=> this.create({data, ...options}));\n  }\n\n  async findOrCreate ({query, data, ...options}) {\n    const doc = await this.findOne({query, ...options});\n    return doc || this.create({data, ...options});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id, ...options}) {\n    return this.exists({id, assert: true, ...options});\n  }\n\n  async existsAll ({ids, assert = false, ...options}) {\n    const docs = await this.getAll({ids, assert, ...options});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids, ...options}) {\n    return this.existsAll({ids, assert: true, ...options});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id, ...options}) {\n    return this.get({id, assert: true, ...options});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids, ...options}) {\n    return this.getAll({ids, assert: true, ...options});\n  }\n\n  find (/* {query, limit, sort, at, after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select, ...options}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select,\n      ...options\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query, ...options}) {\n    const docs = await this.find({query, select: ['id'], ...options});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, at, after, ...options} = {}) {\n    return this.find({limit, sort, at, after, ...options});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true, ...options}) {\n    return this.update({id, data, merge, assert: true, ...options});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false, ...options}) {\n    this._addUpdatedAt(data);\n    return mapp(ids, (id)=> {\n      return this.update({id, data, merge, assert, ...options});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true, ...options}) {\n    return this.update({ids, data, merge, assert: true, ...options});\n  }\n\n  async updateMany ({query, data, merge = true, ...options}) {\n    const ids = await this.findIds({query, ...options});\n    return this.updateAll({ids, data, merge, ...options});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id, ...options}) {\n    return this.delete({id, assert: true, ...options});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query, ...options}) {\n    const ids = await this.findIds({query, ...options});\n    return this.deleteAll({ids, ...options});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    const loader = new DataLoader(async (ids)=> {\n      this.logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id.toString(), doc);\n      }\n\n      return ids.map((id)=> {\n        const id_s = id.toString();\n        return lookup.has(id_s) ? lookup.get(id_s) : null;\n      });\n    });\n\n    loader.loadManyCompact = async function loadManyCompact (ids) {\n      const docs = await loader.loadMany(ids);\n      return compact(docs);\n    };\n\n    return loader;\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this.timestamp();\n    }\n    obj = this._addCreatedAt(obj, time);\n    obj = this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    const {\n      created_at = (time || this.timestamp()),\n      ...rest\n    } = obj;\n    return {\n      created_at,\n      ...rest\n    };\n  }\n\n  _addUpdatedAt (obj, time) {\n    const {\n      updated_at = (time || this.timestamp()),\n      ...rest\n    } = obj;\n    return {\n      updated_at,\n      ...rest\n    };\n  }\n}\n\nsingleton(Collection);\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from '../Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get firestore () {\n    return this.app.firestore();\n  }\n\n  get collection () {\n    return this.firestore.collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    const {id} = await this.add({data});\n    return this.get({id});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(...refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, at, after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = after || at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    const doc = await this.get({id, assert});\n    if (doc) {\n      const ref = this.doc(id);\n      await ref.delete();\n    }\n    return doc;\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import logger from '../logger';\n\n// TODO: move this to utils, would be generally useful\nfunction instanceGetter ({Constructors, options}) {\n  return function getter (name) {\n    if (!(name in Constructors)) {\n      const msg = `Constructor with name ${name} does not exist`;\n      throw new Error(msg);\n    }\n    const Constructor = Constructors[name];\n    return Constructor.instance(options);\n  };\n}\n\nexport default function addInstanceGetters (input) {\n  logger.debug('Processing options', {\n    name: 'addInstanceGetters',\n    input\n  });\n  const {Services, Collections, ...options} = input;\n\n  options.getService = instanceGetter({\n    Constructors: Services,\n    options\n  });\n\n  options.getCollection = instanceGetter({\n    Constructors: Collections,\n    options\n  });\n\n  return options;\n}\n","export default function getToken (request) {\n  if (!request) {\n    return null;\n  }\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  loadSession,\n  getToken = getTokenDefault,\n  start = ()=> {},\n  ...input_options\n}) {\n  return async ({req: request} = {})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child('contextBuilder');\n\n    await start();\n\n    const options = addInstanceGetters(input_options);\n    const {getCollection} = options;\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    let session_id = null;\n    let session = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    try {\n      logger.debug('Getting token');\n      const token = getToken(request);\n      logger.debug('Loading session');\n      session = await loadSession({token, getCollection, getLoader});\n      ({session_id, user_id, user} = session);\n      logger.debug('Loaded session', {session_id, user});\n    } catch (error) {\n      logger.error('Error loading session', error);\n      load_user_error = error;\n    }\n\n    return {\n      session_id,\n      session,\n      user_id,\n      user,\n      load_user_error,\n      getLoader,\n      ...options\n    };\n  };\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from '../../logger';\nimport {GraphQLError} from '../../Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {merge} from 'lodash';\n\nimport base_logger from '../../logger';\n\nexport default function exposeResolvers ({Controllers, Scalars, options}) {\n  const logger = base_logger.child('exposeResolvers');\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\n\nimport exposeResolvers from './exposeResolvers';\nimport addInstanceGetters from '../addInstanceGetters';\nimport logger from '../../logger';\n\nexport default function makeSchema ({Schema, Controllers, Scalars, options = {}}) {\n  logger.debug('Making schema', {name: 'makeSchema', options});\n  options = addInstanceGetters(options);\n  const resolvers = exposeResolvers({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport base_logger from '../../logger';\nimport formatErrorDefault from './formatError';\nimport makeSchema from './makeSchema';\n\nexport default function createGraphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const logger = base_logger.child({\n    name: 'createGraphqlHandler',\n    options\n  });\n\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  const schema = makeSchema({\n    options: opts_controller,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  logger.debug('Creating ApolloServer', {options: opts_server});\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n  const server = new ApolloServer({...opts_server, schema});\n\n  logger.debug('Creating GraphQL handler', {options: opts_handler});\n  return server.createHandler(opts_handler);\n}\n","import {graphql} from 'graphql';\n\nimport logger from '../../logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n","import directGraphqlRequest from './directGraphqlRequest';\nimport makeSchema from './makeSchema';\n\nexport default function directGraphqlRequester ({\n  Schema,\n  Controllers,\n  Scalars,\n  options,\n  buildContext\n}) {\n  const schema = makeSchema({Schema, Controllers, Scalars, options});\n  return async function request ({query, variables}) {\n    const context = await buildContext();\n    return directGraphqlRequest({schema, context, query, variables});\n  };\n}\n","import {isFunction, get} from 'lodash';\n\nimport initialize from '../../initialize';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from '../../Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class GraphQLController {\n  constructor (options) {\n    // Only initialize if options are passed (we skip when building schema)\n    if (options) {\n      initialize.call(this, {namespace: 'GraphQLController', ...options});\n    }\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  get collection () {\n    return this.getCollection(this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user,\n            obj,\n            args\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            const result = await resolver.call(this, params);\n            rlogger.info('Resolver result', {result});\n            return result;\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error(error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, path}) {\n    return (request)=> {\n      const loader = request.context.getLoader(collection);\n      const id = get(request, path);\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, path}) {\n    return (request)=> {\n      const loader = request.context.getLoader(collection);\n      const ids = get(request, path);\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return (request)=> {\n      const type = getType(request);\n      return request.info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  addSessionUserId (key) {\n    return ({data, context})=> {\n      return {\n        ...data,\n        [key]: context.user.id\n      };\n    };\n  }\n\n  pass ({obj, info}) {\n    const attr = info.fieldName;\n    return obj[attr];\n  }\n\n  polyRef ({obj, info, context}) {\n    const {fieldName: name} = info;\n    const type = obj[`${name}_type`];\n    const id = obj[`${name}_id`];\n    if (!(type && id)) {\n      return null;\n    }\n    const Loader = context.getLoader(type);\n    return Loader.load(id);\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create');\n  update = this._wrapToCollection('update');\n  delete = this._wrapToCollection('delete')\n\n  get = this.load({\n    collection: this.name,\n    path: 'args.id'\n  });\n\n  _toCollection (method) {\n    return (request)=> {\n      return this.collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const {args = {}} = request;\n\n      let {data} = args;\n      if (this[before]) {\n        data = await this[before]({...request, data});\n      }\n\n      let doc = await this.collection[method]({...args, data});\n      if (this[after]) {\n        const result = await this[after]({...request, data, doc});\n        if (result !== undefined) {\n          doc = result;\n        }\n      }\n\n      return doc;\n    };\n  }\n}\n","import {get, difference} from 'lodash';\nimport gql from 'graphql-tag';\n\nimport exposeResolvers from './exposeResolvers';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = exposeResolvers({Controllers, Scalars});\n  if (typeof Schema === \"string\") {\n    Schema = gql(Schema);\n  }\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n","import Express from 'express';\nimport Cors from 'cors';\n\nimport logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\n\nexport default function createHttpHandler ({Handler, options}) {\n  const app = Express();\n  const cors = Cors(options.cors);\n  app.use(cors);\n\n  options = addInstanceGetters(options.handler);\n\n  logger.debug('Creating HTTP Handler', {\n    name: 'createHttpHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  handler.expose(app);\n\n  return app;\n}\n","import initialize from '../initialize';\n\nexport default class Handler {\n  constructor ({start, ...options}) {\n    this.start = start;\n    initialize.call(this, {namespace: 'Handler', ...options});\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  actions () {\n    throw new Error('Handler should implement actions');\n  }\n\n  expose () {\n    throw new Error('Handler should implement expose');\n  }\n}\n","import Handler from '../Handler';\n\nexport default class HttpHandler extends Handler {\n  expose (app) {\n    let actions = this.actions();\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([route, action])=> {\n        if (!route.includes(' ')) {\n          route = `GET ${route}`;\n        }\n        const [method, path] = route.split(/\\s+/);\n        return {method, path, action};\n      });\n    }\n\n    for (const {method, path, action} of actions) {\n      const fn = method.toLowerCase();\n      app[fn](path, this.handle(action));\n    }\n\n    return app;\n  }\n\n  handle (action) {\n    return async (request, response)=> {\n      await this.start();\n\n      const {params} = request;\n      const logger = this.logger.child({action, params});\n\n      try {\n        logger.info('Calling handler');\n        const method = this[action].bind(this);\n        const data = await method({params, request, response});\n        logger.info('Handler success', {data});\n        return response.json(data);\n      } catch (error) {\n        logger.error('Handler failure', error);\n        return response\n          .status(error.status || 500)\n          .json({error: error.message});\n      }\n    };\n  }\n}\n","import logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\n\nexport default function createPubSubHandler ({Handler, options}) {\n  options = addInstanceGetters(options.handler);\n\n  logger.debug('Creating PubSub Handler', {\n    name: 'createPubSubHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  return handler.expose();\n}\n","import Handler from '../Handler';\n\nexport default class PubSubHandler extends Handler {\n  expose (topic) {\n    let actions = this.actions(topic);\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([topic, action])=> {\n        return {topic, action};\n      });\n    }\n\n    return actions.map(({topic, action})=> {\n      const handler = this.handle(action);\n      return {topic, handler};\n    });\n  }\n\n  handle (action) {\n    return async (message, context)=> {\n      console.log('calling pubsub start...');\n      await this.start();\n\n      const {json, data, attributes} = message;\n      const logger = this.logger.child({\n        name: 'handle',\n        json,\n        attributes,\n        context\n      });\n\n      try {\n        logger.info('Running handler');\n        const args = {json, data, attributes, context};\n        const response = await action.call(this, args);\n        logger.info('Handler success', response);\n      } catch (error) {\n        logger.error('Handler failure', error);\n      }\n    };\n  }\n}\n"],"names":["GraphQLError","ApolloError","constructor","code","message","params","Function","expected","is","DoesNotExistError","type","id","ids","query","missing","join","NotAuthorizedError","path","logger","Logger","initialize","options","namespace","required","name","Error","default_logger","child","Collection","call","bucket","Admin","storage","collection","create","createAll","datas","mapp","data","findOrCreate","doc","findOne","exists","existsAssert","assert","existsAll","docs","getAll","every","existsAllAssert","get","getAssert","getAllAssert","find","sort","select","limit","length","findIds","map","list","at","after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","lookup","Map","set","toString","id_s","has","loadManyCompact","loadMany","compact","timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","rest","updated_at","singleton","timestampsToDates","Object","keys","reduce","result","k","toDate","FirestoreCollection","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","cursor","invalid","field","parts","Array","isArray","isObject","entries","value","part","op","where","orderBy","start","fn","isNumber","args","batch","commit","omit","getOrAddById","x","user","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","isExisting","context","isSignedIn","user_id","isPublic","instanceGetter","Constructors","getter","msg","Constructor","instance","addInstanceGetters","input","Services","Collections","getService","getCollection","getToken","request","header","prefix","match","replace","contextBuilder","loadSession","getTokenDefault","input_options","req","base_logger","loaders","getLoader","arg","session_id","session","load_user_error","token","error","formatError","GraphQL","originalError","oerror","public_error","exposeResolvers","Controllers","Scalars","resolvers","Controller","controller","expose","makeSchema","Schema","makeExecutableSchema","typeDefs","createGraphqlHandler","server","opts_server","handler","opts_handler","opts_controller","schema","formatErrorDefault","ApolloServer","createHandler","directGraphqlRequest","variables","rlogger","root","response","graphql","errors","directGraphqlRequester","buildContext","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","GraphQLController","_toCollection","_wrapToCollection","load","groups","group","definition","info","isFunction","resolver","authorizer","authorized","resolveType","getType","stub","addSessionUserId","key","pass","attr","fieldName","polyRef","Loader","method","cmethod","before","undefined","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema","gql","createHttpHandler","Handler","Express","cors","Cors","use","actions","HttpHandler","route","action","split","toLowerCase","handle","bind","json","status","createPubSubHandler","PubSubHandler","topic","console","log","attributes"],"mappings":"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"}