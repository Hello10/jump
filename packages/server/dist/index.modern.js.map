{"version":3,"file":"index.modern.js","sources":["../src/logger.js","../src/initialize.js","../src/collections/Collection.js","../src/collections/timestampsToDates.js","../src/Errors.js","../src/collections/FirestoreCollection.js","../src/handlers/graphql/Authorizers.js","../src/handlers/processOptions.js","../src/handlers/graphql/getToken.js","../src/handlers/graphql/contextBuilder.js","../src/handlers/graphql/formatError.js","../src/handlers/graphql/exposeResolvers.js","../src/handlers/graphql/createGraphqlHandler.js","../src/handlers/graphql/GraphQLController.js","../src/handlers/graphql/processSchema.js","../src/handlers/http/createHttpHandler.js","../src/handlers/Handler.js","../src/handlers/http/HttpHandler.js","../src/handlers/pubsub/createPubSubHandler.js","../src/handlers/pubsub/PubSubHandler.js","../src/directGraphqlRequest.js"],"sourcesContent":["import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import default_logger from './logger';\n\nexport default function initialize (options) {\n  const {namespace} = options;\n  const required = [\n    'Admin',\n    'app',\n    'Enums',\n    'getCollection',\n    'getService'\n  ];\n  for (const name of required) {\n    if (!options[name]) {\n      throw new Error(`Missing required argument for ${namespace}: ${name}`);\n    }\n    this[name] = options[name];\n  }\n\n  let {logger} = options;\n  if (!logger) {\n    logger = default_logger;\n  }\n  this.logger = logger.child(`${namespace}:${this.name}`);\n}\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport Promise from 'bluebird';\nimport {singleton} from '@hello10/util';\n\nimport initialize from '../initialize';\n\nexport default class Collection {\n  constructor (options) {\n    initialize.call(this, {namespace: 'Collection', ...options});\n  }\n\n  bucket (name) {\n    return this.Admin.storage().bucket(name);\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, start_at, start_after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, start_at, start_after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas}) {\n    return Promise.map(datas, (data)=> this.create({data}));\n  }\n\n  async findOrCreate ({query, data}) {\n    const doc = await this.findOne({query});\n    return doc || this.create({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id}) {\n    return this.exists({id, assert: true});\n  }\n\n  async existsAll ({ids, assert = false}) {\n    const docs = await this.getAll({ids, assert});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids}) {\n    return this.existsAll({ids, assert: true});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id}) {\n    return this.get({id, assert: true});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids}) {\n    return this.getAll({ids, assert: true});\n  }\n\n  find (/* {query, limit, sort, start_at, start_after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query}) {\n    const docs = await this.find({query, select: ['id']});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, start_at, start_after} = {}) {\n    return this.find({limit, sort, start_at, start_after});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true}) {\n    return this.update({id, data, merge, assert: true});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false}) {\n    this._addUpdatedAt(data);\n    return Promise.map(ids, (id)=> {\n      return this.update({id, data, merge, assert});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true}) {\n    return this.update({ids, data, merge, assert: true});\n  }\n\n  async updateMany ({query, data, merge = true}) {\n    const ids = await this.findIds({query});\n    return this.updateAll({ids, data, merge});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id}) {\n    return this.delete({id, assert: true});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query}) {\n    const ids = await this.findIds({query});\n    return this.deleteAll({ids});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    return new DataLoader(async (ids)=> {\n      this.logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id, doc);\n      }\n\n      return ids.map((id)=> {\n        return lookup.has(id) ? lookup.get(id) : null;\n      });\n    });\n  }\n\n  load (id) {\n    if (!id) {\n      throw new Error('Missing id');\n    }\n    const loader = this.getLoader(this.name);\n    return loader.load(id);\n  }\n\n  loadMany (ids) {\n    if (!ids.length) {\n      return [];\n    }\n    const loader = this.getLoader(this.name);\n    return loader.loadMany(ids);\n  }\n\n  async loadManyCompact (ids) {\n    const docs = await this.loadMany(ids);\n    return compact(docs);\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this._timestamp();\n    }\n    this._addCreatedAt(obj, time);\n    this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    if (!('created_at' in obj)) {\n      obj.created_at = time || this._timestamp();\n    }\n    return obj;\n  }\n\n  _addUpdatedAt (obj, time) {\n    if (!('updated_at' in obj)) {\n      obj.updated_at = time || this._timestamp();\n    }\n    return obj;\n  }\n}\n\nsingleton(Collection);\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from '../Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    return this.add({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, start_at, start_after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = start_after || start_at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = start_after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    const ref = this.doc(id);\n    return ref.delete();\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","// TODO: move this to utils, would be generally useful\nfunction instanceGetter ({Constructors, options}) {\n  return function getter (name) {\n    const Constructor = Constructors[name];\n    if (!Constructor) {\n      const msg = `Constructor with name ${name} does not exist`;\n      throw new Error(msg);\n    }\n    return Constructor.instance(options);\n  };\n}\n\nexport default function processOptions (input) {\n  const {Services, Collections, ...options} = input;\n\n  options.getService = instanceGetter({\n    Constructors: Services,\n    options\n  });\n\n  options.getCollection = instanceGetter({\n    Constructors: Collections,\n    options\n  });\n\n  return options;\n}\n","export default function getToken (request) {\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from '../../logger';\nimport processOptions from '../processOptions';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  loadSession,\n  getToken = getTokenDefault,\n  start = ()=> {},\n  ...options\n}) {\n  return async ({req} = {})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child('contextBuilder');\n\n    await start();\n\n    options = processOptions(options);\n    const {getCollection} = options;\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    const token = getToken(req);\n    if (token) {\n      try {\n        ({session_id, user_id, user} = await loadSession({token, getCollection}));\n        logger.debug('Loaded session', {session_id, user});\n      } catch (error) {\n        logger.error('Error loading session', error);\n        load_user_error = error;\n      }\n    }\n\n    return {\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      getLoader,\n      ...options\n    };\n  };\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from '../../logger';\nimport {GraphQLError} from '../../Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {merge} from 'lodash';\n\nimport logger from '../../logger';\n\nexport default function exposeResolvers ({Controllers, Scalars, options}) {\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\nimport {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport processOptions from '../processOptions';\nimport formatErrorDefault from './formatError';\nimport exposeResolvers from './exposeResolvers';\n\nfunction makeSchema ({Schema, Controllers, Scalars, options}) {\n  const resolvers = exposeResolvers({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n\nexport default function createGraphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n\n  const schema = makeSchema({\n    options: processOptions(opts_controller),\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  const server = new ApolloServer({...opts_server, schema});\n  return server.createHandler(opts_handler);\n}\n","import {isFunction} from 'lodash';\n\nimport initialize from '../../initialize';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from '../../Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class GraphQLController {\n  constructor (options) {\n    // Only initialize if options are passed (we skip when building schema)\n    if (options) {\n      initialize.call(this, {namespace: 'GraphQLController', ...options});\n    }\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection (name) {\n    return this.getCollection(name || this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            rlogger.info('Calling resolver', {obj, args});\n            return resolver.call(this, params);\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error(error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  get    = this._toCollection('get');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create')\n  update = this._wrapToCollection('update');\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const {id} = request.args;\n    const collection = this.collection(request);\n    const deleted = await collection.delete({id});\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      const collection = this.collection(request);\n      return collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const collection = this.collection(request);\n\n      let {data} = request.args;\n      if (this[before]) {\n        data = await this[before](request);\n      }\n\n      let doc = await collection[method]({data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n}\n","import {get, difference} from 'lodash';\n\nimport exposeResolvers from './exposeResolvers';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = exposeResolvers({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n","import Express from 'express';\nimport Cors from 'cors';\n\nimport processOptions from '../processOptions';\n\nexport default function createHttpHandler ({Handler, options}) {\n  const app = Express();\n  const cors = Cors(options.cors);\n  app.use(cors);\n\n  options = processOptions(options.handler);\n  const handler = new Handler(options);\n  handler.expose(app);\n\n  return app;\n}\n","import initialize from '../initialize';\n\nexport default class Handler {\n  constructor ({start, ...options}) {\n    this.start = start;\n    initialize.call(this, {namespace: 'Handler', ...options});\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  actions () {\n    throw new Error('Handler should implement actions');\n  }\n\n  expose () {\n    throw new Error('Handler should implement expose');\n  }\n}\n","import Handler from '../Handler';\n\nexport default class HttpHandler extends Handler {\n  expose (app) {\n    let actions = this.actions();\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([route, action])=> {\n        if (!route.includes(' ')) {\n          route = `GET ${route}`;\n        }\n        const [method, path] = route.split(/\\s+/);\n        return {method, path, action};\n      });\n    }\n\n    for (const {method, path, action} of actions) {\n      const fn = method.toLowerCase();\n      app[fn](path, this.handle(action));\n    }\n\n    return app;\n  }\n\n  handle (action) {\n    return async (request, response)=> {\n      await this.start();\n\n      const {params} = request;\n      const logger = this.logger.child({action, params});\n\n      try {\n        logger.info('Handler running');\n        const method = this[action].bind(this);\n        const data = await method({params, request, response});\n        logger.info('Handler success', {data});\n        return response.json(data);\n      } catch (error) {\n        logger.error('Handler failure', error);\n        return response\n          .status(error.status || 500)\n          .json({error: error.message});\n      }\n    };\n  }\n}\n","import processOptions from '../processOptions';\n\nexport default function createPubSubHandler ({Handler, options}) {\n  options = processOptions(options.handler);\n  const handler = new Handler(options);\n  return handler.expose();\n}\n","import Handler from '../Handler';\n\nexport default class PubSubHandler extends Handler {\n  expose (topic) {\n    let actions = this.actions(topic);\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([topic, action])=> {\n        return {topic, action};\n      });\n    }\n\n    return actions.map(({topic, action})=> {\n      const handler = this.handle(action);\n      return {topic, handler};\n    }, {});\n  }\n\n  handle (action) {\n    return async (message, context)=> {\n      await this.start();\n\n      const {json, data, attributes} = message;\n      const logger = this.logger.child({action, message, context});\n\n      try {\n        logger.info('Handler running');\n        const method = this[action].bind(this);\n        const response = await method({json, data, attributes, context});\n        logger.info('Handler success', response);\n      } catch (error) {\n        logger.error('Handler failure', error);\n      }\n    };\n  }\n}\n","import {graphql} from 'graphql';\n\nimport logger from './logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({Schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(Schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n"],"names":["logger","Logger","initialize","options","namespace","required","name","Error","default_logger","child","Collection","constructor","call","bucket","Admin","storage","collection","create","createAll","datas","Promise","map","data","findOrCreate","query","doc","findOne","exists","existsAssert","id","assert","existsAll","ids","docs","getAll","every","existsAllAssert","get","getAssert","getAllAssert","find","sort","select","limit","length","findIds","list","start_at","start_after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","message","lookup","Map","set","has","load","getLoader","loadMany","loadManyCompact","compact","_timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","updated_at","singleton","timestampsToDates","type","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","params","Function","expected","is","DoesNotExistError","missing","join","NotAuthorizedError","path","FirestoreCollection","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","cursor","invalid","field","parts","isObject","entries","value","Array","isArray","part","op","where","orderBy","start","fn","isNumber","args","batch","commit","omit","getOrAddById","x","user","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","isExisting","context","isSignedIn","user_id","isPublic","instanceGetter","Constructors","getter","Constructor","msg","instance","processOptions","input","Services","Collections","getService","getCollection","getToken","request","header","prefix","match","replace","contextBuilder","loadSession","getTokenDefault","req","base_logger","loaders","arg","session_id","load_user_error","token","error","formatError","GraphQL","originalError","oerror","public_error","exposeResolvers","Controllers","Scalars","resolvers","Controller","controller","expose","makeSchema","Schema","makeExecutableSchema","typeDefs","createGraphqlHandler","server","opts_server","handler","opts_handler","opts_controller","formatErrorDefault","schema","ApolloServer","createHandler","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","GraphQLController","_toCollection","_wrapToCollection","groups","group","definition","info","isFunction","resolver","authorizer","rlogger","authorized","resolveType","getType","stub","beforeDelete","deleted","deleted_at","afterDelete","method","cmethod","before","after","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","errors","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema","createHttpHandler","Handler","Express","cors","Cors","use","actions","HttpHandler","route","action","split","toLowerCase","handle","response","bind","json","status","createPubSubHandler","PubSubHandler","topic","attributes","directGraphqlRequest","variables","root","graphql"],"mappings":"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"}