{"version":3,"file":"index.js","sources":["../src/logger.js","../src/initialize.js","../src/collections/Collection.js","../src/collections/timestampsToDates.js","../src/Errors.js","../src/collections/FirestoreCollection.js","../src/handlers/graphql/Authorizers.js","../src/handlers/processOptions.js","../src/handlers/graphql/getToken.js","../src/handlers/graphql/contextBuilder.js","../src/handlers/graphql/formatError.js","../src/handlers/graphql/exposeResolvers.js","../src/handlers/graphql/createGraphqlHandler.js","../src/handlers/graphql/GraphQLController.js","../src/handlers/graphql/processSchema.js","../src/handlers/http/createHttpHandler.js","../src/handlers/Handler.js","../src/handlers/http/HttpHandler.js","../src/handlers/pubsub/createPubSubHandler.js","../src/handlers/pubsub/PubSubHandler.js","../src/directGraphqlRequest.js"],"sourcesContent":["import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import default_logger from './logger';\n\nexport default function initialize (options) {\n  const {namespace} = options;\n  const required = [\n    'Admin',\n    'app',\n    'Enums',\n    'getCollection',\n    'getService'\n  ];\n  for (const name of required) {\n    if (!options[name]) {\n      throw new Error(`Missing required argument for ${namespace}: ${name}`);\n    }\n    this[name] = options[name];\n  }\n\n  let {logger} = options;\n  if (!logger) {\n    logger = default_logger;\n  }\n  this.logger = logger.child(`${namespace}:${this.name}`);\n}\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport Promise from 'bluebird';\nimport {singleton} from '@hello10/util';\n\nimport initialize from '../initialize';\n\nexport default class Collection {\n  constructor (options) {\n    initialize.call(this, {namespace: 'Collection', ...options});\n  }\n\n  bucket (name) {\n    return this.Admin.storage().bucket(name);\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, start_at, start_after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, start_at, start_after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas}) {\n    return Promise.map(datas, (data)=> this.create({data}));\n  }\n\n  async findOrCreate ({query, data}) {\n    const doc = await this.findOne({query});\n    return doc || this.create({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id}) {\n    return this.exists({id, assert: true});\n  }\n\n  async existsAll ({ids, assert = false}) {\n    const docs = await this.getAll({ids, assert});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids}) {\n    return this.existsAll({ids, assert: true});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id}) {\n    return this.get({id, assert: true});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids}) {\n    return this.getAll({ids, assert: true});\n  }\n\n  find (/* {query, limit, sort, start_at, start_after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query}) {\n    const docs = await this.find({query, select: ['id']});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, start_at, start_after} = {}) {\n    return this.find({limit, sort, start_at, start_after});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true}) {\n    return this.update({id, data, merge, assert: true});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false}) {\n    this._addUpdatedAt(data);\n    return Promise.map(ids, (id)=> {\n      return this.update({id, data, merge, assert});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true}) {\n    return this.update({ids, data, merge, assert: true});\n  }\n\n  async updateMany ({query, data, merge = true}) {\n    const ids = await this.findIds({query});\n    return this.updateAll({ids, data, merge});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id}) {\n    return this.delete({id, assert: true});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query}) {\n    const ids = await this.findIds({query});\n    return this.deleteAll({ids});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    return new DataLoader(async (ids)=> {\n      this.logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id, doc);\n      }\n\n      return ids.map((id)=> {\n        return lookup.has(id) ? lookup.get(id) : null;\n      });\n    });\n  }\n\n  load (id) {\n    if (!id) {\n      throw new Error('Missing id');\n    }\n    const loader = this.getLoader(this.name);\n    return loader.load(id);\n  }\n\n  loadMany (ids) {\n    if (!ids.length) {\n      return [];\n    }\n    const loader = this.getLoader(this.name);\n    return loader.loadMany(ids);\n  }\n\n  async loadManyCompact (ids) {\n    const docs = await this.loadMany(ids);\n    return compact(docs);\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this._timestamp();\n    }\n    this._addCreatedAt(obj, time);\n    this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    if (!('created_at' in obj)) {\n      obj.created_at = time || this._timestamp();\n    }\n    return obj;\n  }\n\n  _addUpdatedAt (obj, time) {\n    if (!('updated_at' in obj)) {\n      obj.updated_at = time || this._timestamp();\n    }\n    return obj;\n  }\n}\n\nsingleton(Collection);\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from '../Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    return this.add({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, start_at, start_after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = start_after || start_at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = start_after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    const ref = this.doc(id);\n    return ref.delete();\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import logger from '../logger';\n\n// TODO: move this to utils, would be generally useful\nfunction instanceGetter ({Constructors, options}) {\n  return function getter (name) {\n    if (!(name in Constructors)) {\n      const msg = `Constructor with name ${name} does not exist`;\n      throw new Error(msg);\n    }\n    const Constructor = Constructors[name];\n    return Constructor.instance(options);\n  };\n}\n\n\nexport default function processOptions (input) {\n  logger.debug('Processing options', {\n    name: 'processOptions',\n    input\n  });\n  const {Services, Collections, ...options} = input;\n\n  options.getService = instanceGetter({\n    Constructors: Services,\n    options\n  });\n\n  options.getCollection = instanceGetter({\n    Constructors: Collections,\n    options\n  });\n\n  return options;\n}\n","export default function getToken (request) {\n  if (!request) {\n    return null;\n  }\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from '../../logger';\nimport processOptions from '../processOptions';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  loadSession,\n  getToken = getTokenDefault,\n  start = ()=> {},\n  ...input_options\n}) {\n  return async ({req: request} = {})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child('contextBuilder');\n\n    await start();\n\n    const options = processOptions(input_options);\n    const {getCollection} = options;\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    logger.debug('Getting token');\n    const token = getToken(request);\n    if (token) {\n      try {\n        logger.debug('Loading session');\n        ({session_id, user_id, user} = await loadSession({token, getCollection}));\n        logger.debug('Loaded session', {session_id, user});\n      } catch (error) {\n        logger.error('Error loading session', error);\n        load_user_error = error;\n      }\n    }\n\n    return {\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      getLoader,\n      ...options\n    };\n  };\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from '../../logger';\nimport {GraphQLError} from '../../Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {merge} from 'lodash';\n\nimport base_logger from '../../logger';\n\nexport default function exposeResolvers ({Controllers, Scalars, options}) {\n  const logger = base_logger.child('exposeResolvers');\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\nimport {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport base_logger from '../../logger';\nimport processOptions from '../processOptions';\nimport formatErrorDefault from './formatError';\nimport exposeResolvers from './exposeResolvers';\n\nfunction makeSchema ({Schema, Controllers, Scalars, options}) {\n  const resolvers = exposeResolvers({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n\nexport default function createGraphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const logger = base_logger.child({\n    name: 'createGraphqlHandler',\n    options\n  });\n\n  logger.debug('Creating GraphQL handler');\n\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n\n  const processed_options = processOptions(opts_controller);\n  logger.debug('Making schema');\n  const schema = makeSchema({\n    options: processed_options,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  logger.debug('Creating server', {options: opts_server});\n  const server = new ApolloServer({...opts_server, schema});\n\n  logger.debug('Creating handler', {options: opts_handler});\n  return server.createHandler(opts_handler);\n}\n","import {isFunction} from 'lodash';\n\nimport initialize from '../../initialize';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from '../../Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class GraphQLController {\n  constructor (options) {\n    // Only initialize if options are passed (we skip when building schema)\n    if (options) {\n      initialize.call(this, {namespace: 'GraphQLController', ...options});\n    }\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection (name) {\n    return this.getCollection(name || this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user,\n            obj,\n            args\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            const result = await resolver.call(this, params);\n            rlogger.info('Resolver result', {result});\n            return result;\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error(error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  get    = this._toCollection('get');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create')\n  update = this._wrapToCollection('update');\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const {id} = request.args;\n    const collection = this.collection(request);\n    const deleted = await collection.delete({id});\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      const collection = this.collection(request);\n      return collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const collection = this.collection(request);\n\n      let {data} = request.args;\n      if (this[before]) {\n        data = await this[before](request);\n      }\n\n      let doc = await collection[method]({data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n}\n","import {get, difference} from 'lodash';\n\nimport exposeResolvers from './exposeResolvers';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = exposeResolvers({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n","import Express from 'express';\nimport Cors from 'cors';\n\nimport logger from '../../logger';\nimport processOptions from '../processOptions';\n\nexport default function createHttpHandler ({Handler, options}) {\n  const app = Express();\n  const cors = Cors(options.cors);\n  app.use(cors);\n\n  options = processOptions(options.handler);\n\n  logger.debug('Creating HTTP Handler', {\n    name: 'createHttpHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  handler.expose(app);\n\n  return app;\n}\n","import initialize from '../initialize';\n\nexport default class Handler {\n  constructor ({start, ...options}) {\n    this.start = start;\n    initialize.call(this, {namespace: 'Handler', ...options});\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  actions () {\n    throw new Error('Handler should implement actions');\n  }\n\n  expose () {\n    throw new Error('Handler should implement expose');\n  }\n}\n","import Handler from '../Handler';\n\nexport default class HttpHandler extends Handler {\n  expose (app) {\n    let actions = this.actions();\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([route, action])=> {\n        if (!route.includes(' ')) {\n          route = `GET ${route}`;\n        }\n        const [method, path] = route.split(/\\s+/);\n        return {method, path, action};\n      });\n    }\n\n    for (const {method, path, action} of actions) {\n      const fn = method.toLowerCase();\n      app[fn](path, this.handle(action));\n    }\n\n    return app;\n  }\n\n  handle (action) {\n    return async (request, response)=> {\n      await this.start();\n\n      const {params} = request;\n      const logger = this.logger.child({action, params});\n\n      try {\n        logger.info('Calling handler');\n        const method = this[action].bind(this);\n        const data = await method({params, request, response});\n        logger.info('Handler success', {data});\n        return response.json(data);\n      } catch (error) {\n        logger.error('Handler failure', error);\n        return response\n          .status(error.status || 500)\n          .json({error: error.message});\n      }\n    };\n  }\n}\n","import logger from '../../logger';\nimport processOptions from '../processOptions';\n\nexport default function createPubSubHandler ({Handler, options}) {\n  options = processOptions(options.handler);\n\n  logger.debug('Creating PubSub Handler', {\n    name: 'createPubSubHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  return handler.expose();\n}\n","import Handler from '../Handler';\n\nexport default class PubSubHandler extends Handler {\n  expose (topic) {\n    let actions = this.actions(topic);\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([topic, action])=> {\n        return {topic, action};\n      });\n    }\n\n    return actions.map(({topic, action})=> {\n      const handler = this.handle(action);\n      return {topic, handler};\n    });\n  }\n\n  handle (action) {\n    return async (message, context)=> {\n      await this.start();\n\n      const {json, data, attributes} = message;\n      const logger = this.logger.child({\n        name: 'handle',\n        json,\n        attributes,\n        context\n      });\n\n      try {\n        logger.info('Running handler');\n        const args = {json, data, attributes, context};\n        const response = await action.call(this, args);\n        logger.info('Handler success', response);\n      } catch (error) {\n        logger.error('Handler failure', error);\n      }\n    };\n  }\n}\n","import {graphql} from 'graphql';\n\nimport logger from './logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({Schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(Schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n"],"names":["logger","Logger","initialize","options","namespace","required","name","Error","default_logger","child","Collection","constructor","call","bucket","Admin","storage","collection","create","createAll","datas","Promise","map","data","findOrCreate","query","findOne","doc","exists","existsAssert","id","assert","existsAll","ids","getAll","docs","every","existsAllAssert","get","getAssert","getAllAssert","find","sort","select","limit","length","findIds","list","start_at","start_after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","message","lookup","Map","set","has","load","getLoader","loadMany","loadManyCompact","compact","_timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","updated_at","singleton","timestampsToDates","type","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","params","Function","expected","is","DoesNotExistError","missing","join","NotAuthorizedError","path","FirestoreCollection","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","isNumber","invalid","cursor","Array","isArray","field","parts","isObject","entries","value","part","op","where","orderBy","start","fn","args","batch","commit","omit","getOrAddById","x","user","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","isExisting","context","isSignedIn","user_id","isPublic","instanceGetter","Constructors","getter","msg","Constructor","instance","processOptions","input","Services","Collections","getService","getCollection","getToken","request","header","prefix","match","replace","body","recover","e","then","contextBuilder","loadSession","getTokenDefault","input_options","req","base_logger","session_id","load_user_error","arg","loaders","token","error","formatError","GraphQL","originalError","oerror","public_error","exposeResolvers","Controllers","Scalars","resolvers","Controller","controller","expose","makeSchema","Schema","makeExecutableSchema","typeDefs","createGraphqlHandler","server","opts_server","handler","opts_handler","opts_controller","formatErrorDefault","processed_options","schema","ApolloServer","createHandler","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","GraphQLController","_toCollection","_wrapToCollection","groups","group","definition","info","isFunction","resolver","authorizer","rlogger","authorized","resolveType","getType","stub","deleted","deleted_at","afterDelete","beforeDelete","method","cmethod","before","after","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","errors","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema","createHttpHandler","Handler","Express","cors","Cors","use","actions","HttpHandler","route","action","split","toLowerCase","handle","response","bind","json","status","createPubSubHandler","PubSubHandler","topic","attributes","directGraphqlRequest","variables","root","graphql"],"mappings":"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"}