{"version":3,"file":"index.js","sources":["../src/Errors.js","../src/logger.js","../src/initialize.js","../src/collections/Collection.js","../src/collections/timestampsToDates.js","../src/collections/FirestoreCollection.js","../src/handlers/graphql/Authorizers.js","../src/handlers/addInstanceGetters.js","../src/handlers/graphql/getToken.js","../src/handlers/graphql/contextBuilder.js","../src/handlers/graphql/formatError.js","../src/handlers/graphql/exposeResolvers.js","../src/handlers/graphql/makeSchema.js","../src/handlers/graphql/createGraphqlHandler.js","../src/handlers/graphql/directGraphqlRequest.js","../src/handlers/graphql/directGraphqlRequester.js","../src/handlers/graphql/GraphQLController.js","../src/handlers/graphql/processSchema.js","../src/handlers/http/createHttpHandler.js","../src/handlers/Handler.js","../src/handlers/http/HttpHandler.js","../src/handlers/pubsub/createPubSubHandler.js","../src/handlers/pubsub/PubSubHandler.js"],"sourcesContent":["import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'Server error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import default_logger from './logger';\n\nexport default function initialize (options) {\n  const {namespace} = options;\n  const required = [\n    'Admin',\n    'Enums',\n    'getCollection',\n    'getService'\n  ];\n  for (const name of required) {\n    if (!options[name]) {\n      throw new Error(`Missing required argument for ${namespace}: ${name}`);\n    }\n    this[name] = options[name];\n  }\n\n  let {logger} = options;\n  if (!logger) {\n    logger = default_logger;\n  }\n  this.logger = logger.child(`${namespace}:${this.name}`);\n}\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport Promise from 'bluebird';\nimport {singleton} from '@hello10/util';\n\nimport initialize from '../initialize';\n\nexport default class Collection {\n  constructor (options) {\n    initialize.call(this, {namespace: 'Collection', ...options});\n  }\n\n  bucket (name) {\n    return this.Admin.storage().bucket(name);\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, at, after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, at, after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas}) {\n    return Promise.map(datas, (data)=> this.create({data}));\n  }\n\n  async findOrCreate ({query, data}) {\n    const doc = await this.findOne({query});\n    return doc || this.create({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id}) {\n    return this.exists({id, assert: true});\n  }\n\n  async existsAll ({ids, assert = false}) {\n    const docs = await this.getAll({ids, assert});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids}) {\n    return this.existsAll({ids, assert: true});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id}) {\n    return this.get({id, assert: true});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids}) {\n    return this.getAll({ids, assert: true});\n  }\n\n  find (/* {query, limit, sort, at, after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query}) {\n    const docs = await this.find({query, select: ['id']});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, at, after} = {}) {\n    return this.find({limit, sort, at, after});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true}) {\n    return this.update({id, data, merge, assert: true});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false}) {\n    this._addUpdatedAt(data);\n    return Promise.map(ids, (id)=> {\n      return this.update({id, data, merge, assert});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true}) {\n    return this.update({ids, data, merge, assert: true});\n  }\n\n  async updateMany ({query, data, merge = true}) {\n    const ids = await this.findIds({query});\n    return this.updateAll({ids, data, merge});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id}) {\n    return this.delete({id, assert: true});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query}) {\n    const ids = await this.findIds({query});\n    return this.deleteAll({ids});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    const loader = new DataLoader(async (ids)=> {\n      this.logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id.toString(), doc);\n      }\n\n      return ids.map((id)=> {\n        const id_s = id.toString();\n        return lookup.has(id_s) ? lookup.get(id_s) : null;\n      });\n    });\n\n    loader.loadManyCompact = async function loadManyCompact (ids) {\n      const docs = await loader.loadMany(ids);\n      return compact(docs);\n    };\n\n    return loader;\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this._timestamp();\n    }\n    this._addCreatedAt(obj, time);\n    this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    if (!('created_at' in obj)) {\n      obj.created_at = time || this._timestamp();\n    }\n    return obj;\n  }\n\n  _addUpdatedAt (obj, time) {\n    if (!('updated_at' in obj)) {\n      obj.updated_at = time || this._timestamp();\n    }\n    return obj;\n  }\n}\n\nsingleton(Collection);\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from '../Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get firestore () {\n    return this.app.firestore();\n  }\n\n  get collection () {\n    return this.firestore.collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    return this.add({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(...refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, at, after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = after || at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    const ref = this.doc(id);\n    return ref.delete();\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import logger from '../logger';\n\n// TODO: move this to utils, would be generally useful\nfunction instanceGetter ({Constructors, options}) {\n  return function getter (name) {\n    if (!(name in Constructors)) {\n      const msg = `Constructor with name ${name} does not exist`;\n      throw new Error(msg);\n    }\n    const Constructor = Constructors[name];\n    return Constructor.instance(options);\n  };\n}\n\nexport default function addInstanceGetters (input) {\n  logger.debug('Processing options', {\n    name: 'addInstanceGetters',\n    input\n  });\n  const {Services, Collections, ...options} = input;\n\n  options.getService = instanceGetter({\n    Constructors: Services,\n    options\n  });\n\n  options.getCollection = instanceGetter({\n    Constructors: Collections,\n    options\n  });\n\n  return options;\n}\n","export default function getToken (request) {\n  if (!request) {\n    return null;\n  }\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  loadSession,\n  getToken = getTokenDefault,\n  start = ()=> {},\n  ...input_options\n}) {\n  return async ({req: request} = {})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child('contextBuilder');\n\n    await start();\n\n    const options = addInstanceGetters(input_options);\n    const {getCollection} = options;\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    try {\n      logger.debug('Getting token');\n      const token = getToken(request);\n      logger.debug('Loading session');\n      const session = await loadSession({token, getCollection, getLoader});\n      ({session_id, user_id, user} = session);\n      logger.debug('Loaded session', {session_id, user});\n    } catch (error) {\n      logger.error('Error loading session', error);\n      load_user_error = error;\n    }\n\n    return {\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      getLoader,\n      ...options\n    };\n  };\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from '../../logger';\nimport {GraphQLError} from '../../Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {merge} from 'lodash';\n\nimport base_logger from '../../logger';\n\nexport default function exposeResolvers ({Controllers, Scalars, options}) {\n  const logger = base_logger.child('exposeResolvers');\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\n\nimport exposeResolvers from './exposeResolvers';\nimport addInstanceGetters from '../addInstanceGetters';\nimport logger from '../../logger';\n\nexport default function makeSchema ({Schema, Controllers, Scalars, options = {}}) {\n  logger.debug('Making schema', {name: 'makeSchema', options});\n  options = addInstanceGetters(options);\n  const resolvers = exposeResolvers({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport base_logger from '../../logger';\nimport formatErrorDefault from './formatError';\nimport makeSchema from './makeSchema';\n\nexport default function createGraphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const logger = base_logger.child({\n    name: 'createGraphqlHandler',\n    options\n  });\n\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  const schema = makeSchema({\n    options: opts_controller,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  logger.debug('Creating ApolloServer', {options: opts_server});\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n  const server = new ApolloServer({...opts_server, schema});\n\n  logger.debug('Creating GraphQL handler', {options: opts_handler});\n  return server.createHandler(opts_handler);\n}\n","import {graphql} from 'graphql';\n\nimport logger from '../../logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n","import directGraphqlRequest from './directGraphqlRequest';\nimport makeSchema from './makeSchema';\n\nexport default function directGraphqlRequester ({\n  Schema,\n  Controllers,\n  Scalars,\n  options,\n  buildContext\n}) {\n  const schema = makeSchema({Schema, Controllers, Scalars, options});\n  return async function request ({query, variables}) {\n    const context = await buildContext();\n    return directGraphqlRequest({schema, context, query, variables});\n  };\n}\n","import {isFunction, get} from 'lodash';\n\nimport initialize from '../../initialize';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from '../../Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class GraphQLController {\n  constructor (options) {\n    // Only initialize if options are passed (we skip when building schema)\n    if (options) {\n      initialize.call(this, {namespace: 'GraphQLController', ...options});\n    }\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  get collection () {\n    return this.getCollection(this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user,\n            obj,\n            args\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            const result = await resolver.call(this, params);\n            rlogger.info('Resolver result', {result});\n            return result;\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error(error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, path}) {\n    return (request)=> {\n      const loader = request.context.getLoader(collection);\n      const id = get(request, path);\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, path}) {\n    return (request)=> {\n      const loader = request.context.getLoader(collection);\n      const ids = get(request, path);\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return (request)=> {\n      const type = getType(request);\n      return request.info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  addSessionUserId (key) {\n    return ({data, context})=> {\n      return {\n        ...data,\n        [key]: context.user.id\n      };\n    };\n  }\n\n  pass ({obj, info}) {\n    const attr = info.fieldName;\n    return obj[attr];\n  }\n\n  polyRef ({obj, info, context}) {\n    const {fieldName: name} = info;\n    const type = obj[`${name}_type`];\n    const id = obj[`${name}_id`];\n    if (!(type && id)) {\n      return null;\n    }\n    const Loader = context.getLoader(type);\n    return Loader.load(id);\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create');\n  update = this._wrapToCollection('update');\n\n  get = this.load({\n    collection: this.name,\n    path: 'args.id'\n  });\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const deleted = await this.collection.delete(request.args);\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      return this.collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const {args} = request;\n\n      let {data} = args;\n      if (this[before]) {\n        data = await this[before]({...request, data});\n      }\n\n      let doc = await this.collection[method]({...args, data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n}\n","import {get, difference} from 'lodash';\n\nimport exposeResolvers from './exposeResolvers';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = exposeResolvers({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n","import Express from 'express';\nimport Cors from 'cors';\n\nimport logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\n\nexport default function createHttpHandler ({Handler, options}) {\n  const app = Express();\n  const cors = Cors(options.cors);\n  app.use(cors);\n\n  options = addInstanceGetters(options.handler);\n\n  logger.debug('Creating HTTP Handler', {\n    name: 'createHttpHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  handler.expose(app);\n\n  return app;\n}\n","import initialize from '../initialize';\n\nexport default class Handler {\n  constructor ({start, ...options}) {\n    this.start = start;\n    initialize.call(this, {namespace: 'Handler', ...options});\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  actions () {\n    throw new Error('Handler should implement actions');\n  }\n\n  expose () {\n    throw new Error('Handler should implement expose');\n  }\n}\n","import Handler from '../Handler';\n\nexport default class HttpHandler extends Handler {\n  expose (app) {\n    let actions = this.actions();\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([route, action])=> {\n        if (!route.includes(' ')) {\n          route = `GET ${route}`;\n        }\n        const [method, path] = route.split(/\\s+/);\n        return {method, path, action};\n      });\n    }\n\n    for (const {method, path, action} of actions) {\n      const fn = method.toLowerCase();\n      app[fn](path, this.handle(action));\n    }\n\n    return app;\n  }\n\n  handle (action) {\n    return async (request, response)=> {\n      await this.start();\n\n      const {params} = request;\n      const logger = this.logger.child({action, params});\n\n      try {\n        logger.info('Calling handler');\n        const method = this[action].bind(this);\n        const data = await method({params, request, response});\n        logger.info('Handler success', {data});\n        return response.json(data);\n      } catch (error) {\n        logger.error('Handler failure', error);\n        return response\n          .status(error.status || 500)\n          .json({error: error.message});\n      }\n    };\n  }\n}\n","import logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\n\nexport default function createPubSubHandler ({Handler, options}) {\n  options = addInstanceGetters(options.handler);\n\n  logger.debug('Creating PubSub Handler', {\n    name: 'createPubSubHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  return handler.expose();\n}\n","import Handler from '../Handler';\n\nexport default class PubSubHandler extends Handler {\n  expose (topic) {\n    let actions = this.actions(topic);\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([topic, action])=> {\n        return {topic, action};\n      });\n    }\n\n    return actions.map(({topic, action})=> {\n      const handler = this.handle(action);\n      return {topic, handler};\n    });\n  }\n\n  handle (action) {\n    return async (message, context)=> {\n      console.log('calling pubsub start...');\n      await this.start();\n\n      const {json, data, attributes} = message;\n      const logger = this.logger.child({\n        name: 'handle',\n        json,\n        attributes,\n        context\n      });\n\n      try {\n        logger.info('Running handler');\n        const args = {json, data, attributes, context};\n        const response = await action.call(this, args);\n        logger.info('Handler success', response);\n      } catch (error) {\n        logger.error('Handler failure', error);\n      }\n    };\n  }\n}\n"],"names":["GraphQLError","ApolloError","constructor","code","message","params","Function","expected","is","DoesNotExistError","type","id","ids","query","missing","join","NotAuthorizedError","path","logger","Logger","initialize","options","namespace","required","name","Error","default_logger","child","Collection","call","bucket","Admin","storage","collection","create","createAll","datas","Promise","map","data","findOrCreate","findOne","doc","exists","existsAssert","assert","existsAll","getAll","docs","every","existsAllAssert","get","getAssert","getAllAssert","find","sort","select","limit","length","findIds","list","at","after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","lookup","Map","set","toString","id_s","has","loadManyCompact","loadMany","compact","_timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","updated_at","singleton","timestampsToDates","Object","keys","reduce","result","k","toDate","FirestoreCollection","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","isNumber","invalid","cursor","Array","isArray","field","parts","isObject","entries","value","part","op","where","orderBy","start","fn","args","batch","commit","omit","getOrAddById","x","user","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","isExisting","context","isSignedIn","user_id","isPublic","instanceGetter","Constructors","getter","msg","Constructor","instance","addInstanceGetters","input","Services","Collections","getService","getCollection","getToken","request","header","prefix","match","replace","body","recover","e","then","contextBuilder","loadSession","getTokenDefault","input_options","req","base_logger","session_id","load_user_error","getLoader","arg","loaders","token","session","error","formatError","GraphQL","originalError","oerror","public_error","exposeResolvers","Controllers","Scalars","resolvers","Controller","controller","expose","makeSchema","Schema","makeExecutableSchema","typeDefs","createGraphqlHandler","server","opts_server","handler","opts_handler","opts_controller","schema","formatErrorDefault","ApolloServer","createHandler","directGraphqlRequest","variables","rlogger","root","graphql","response","errors","directGraphqlRequester","buildContext","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","GraphQLController","_toCollection","_wrapToCollection","load","groups","group","definition","info","isFunction","resolver","authorizer","authorized","resolveType","getType","stub","addSessionUserId","key","pass","attr","fieldName","polyRef","Loader","deleted","deleted_at","afterDelete","beforeDelete","method","cmethod","before","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema","createHttpHandler","Handler","Express","cors","Cors","use","actions","HttpHandler","route","action","split","toLowerCase","handle","bind","json","status","createPubSubHandler","PubSubHandler","topic","console","log","attributes"],"mappings":"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"}