{"version":3,"file":"index.esm.js","sources":["../src/Authorizers.js","../src/timestampsToDates.js","../src/Errors.js","../src/Collection.js","../src/Logger.js","../src/Controller.js","../src/makeSchema.js","../src/contextBuilder.js","../src/graphqlHandler.js"],"sourcesContent":["export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  }) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DocumentDoesNotExistError extends GraphQLError {\n  constructor (params) {\n    const {type, id} = params;\n    super({\n      code: 'DocumentDoesNotExist',\n      message: `Document ${type} with id ${id} does not exist`,\n      params\n    });\n  }\n}\n\nexport class SessionUserNotFoundError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'SessionUserNotFound',\n      message: `Session user not found: ${params.id}`,\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import DataLoader from 'dataloader';\nimport {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport timestampsToDates from './timestampsToDates';\nimport {DocumentDoesNotExistError} from './Errors';\n\nexport default class Collection {\n  static get (args) {\n    return new this(args);\n  }\n\n  constructor ({Admin, app, getCollection, getLoader}) {\n    this.Admin = Admin;\n    this.app = app;\n    this.getCollection = getCollection;\n    this.getLoader = getLoader;\n  }\n\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  get loader () {\n    return new DataLoader((ids)=> {\n      return this.getMany({ids});\n    });\n  }\n\n  //////////\n  // CRUD //\n  //////////\n  async add ({data}) {\n    data = omit(data, 'id');\n    const timestamp = this._timestampField();\n    data.created_at = timestamp;\n    data.updated_at = timestamp;\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async set ({id, data, merge = true}) {\n    data = omit(data, 'id');\n    data.updated_at = this._timestampField();\n    const ref = this.doc(id);\n    await ref.set(data, {merge});\n    return this.get({id});\n  }\n\n  async addOrSetByField ({field, data, add = (x)=> x}) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add({id, data});\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  async exists (id) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    return snap.exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const error = this._doesNotExistError(id);\n      throw error;\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getMany ({ids}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    return ids.map((id)=> {\n      return (id in docs_by_id) ? docs_by_id[id] : null;\n    });\n  }\n\n  async find ({where, limit, order_by, select} = {}) {\n    let query = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (where) {\n      let parts;\n      if (isObject(where)) {\n        parts = Object.entries(where).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(where)) {\n        parts = Array.isArray(where[0]) ? where : [where];\n      } else {\n        invalid('where');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('where');\n        }\n        const [field, op, value] = part;\n        query = query.where(field, op, value);\n      }\n    }\n\n    if (order_by) {\n      if (!Array.isArray(order_by)) {\n        order_by = [order_by];\n      }\n      query = query.orderBy(...order_by);\n    }\n\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      query = query.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      query = query.select(...select);\n    }\n\n    const snap = await query.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  async findOne ({where, order_by, select}) {\n    const docs = await this.find({\n      limit: 1,\n      where,\n      order_by,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        where: [field, '==', value]\n      });\n    };\n  }\n\n  async delete ({id, ids, where}) {\n    if (id) {\n      const ref = this.doc(id);\n      return ref.delete();\n    }\n\n    if (ids && where) {\n      throw new Error('Delete call should pass ids or where not both');\n    }\n\n    if (where) {\n      const docs = await this.find({where});\n      ids = docs.map(({id})=> id);\n    }\n\n    if (ids.length === 0) {\n      return Promise.resolve();\n    }\n\n    const batch = this.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestampField () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _doesNotExistError (id) {\n    const type = this.name();\n    return new DocumentDoesNotExistError({type, id});\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export default class Logger {\n  child () {\n    return this;\n  }\n}\n\nconst levels = ['trace', 'debug', 'info', 'warn', 'error', 'fatal'];\nfor (const level of levels) {\n  Logger.prototype[level] = function log (...args) {\n    const {console} = global;\n    const log = (level in console) ? console[level] : console.log;\n    return log.call(console, ...args);\n  };\n}\n","import {isFunction} from 'lodash';\nimport Logger from './Logger';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from './Errors';\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class Controller {\n  constructor ({logger} = {}) {\n    if (!logger) {\n      logger = new Logger();\n    }\n    this.logger = logger;\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection ({context, name}) {\n    return context.getCollection(name || this.name);\n  }\n\n  loader ({context, name}) {\n    return context.getLoader(name || this.name);\n  }\n\n  expose () {\n    const result = {};\n    const {logger} = this;\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        const {resolver, authorizer} = definition;\n\n        const valid = [resolver, authorizer].every(isFunction);\n        if (!valid) {\n          throw new Error(`Invalid resolver definition for ${path}`);\n        }\n\n        result[type][name] = async (obj, args, context, info)=> {\n          logger.debug(`Calling resolver ${path}`);\n\n          try {\n            const params = {obj, args, context, info};\n\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              throw new NotAuthorizedError({path});\n            }\n\n            return resolver.call(this, params);\n          } catch (error) {\n            if (error.expected) {\n              logger.error(error, 'Expected GraphQL error');\n              throw error;\n            } else {\n              logger.error(error, 'Unexpected GraphQL error');\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  get (request) {\n    const collection = this.collection(request);\n    return collection.get(request.args);\n  }\n\n  list (request) {\n    const collection = this.collection(request);\n    return collection.list(request.args);\n  }\n\n  create (request) {\n    const collection = this.collection(request);\n    const {data} = request.args;\n    return collection.add(data);\n  }\n\n  update (request) {\n    const collection = this.collection(request);\n    const {id, data} = request.args;\n    return collection.set({id, data});\n  }\n\n  delete (request) {\n    const collection = this.collection(request);\n    const {id} = request.args;\n    return collection.delete({id});\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n}\n","import {makeExecutableSchema} from 'graphql-tools';\nimport {merge} from 'lodash';\n\nexport default function makeSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    console.log(`Exposing controller ${name}`);\n    const controller = new Controller();\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","export default function contextBuilder ({Admin, app, Collections, getToken, loadUserFromToken}) {\n  return async ({req})=> {\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    function getCollection (arg) {\n      const name = arg.name || arg;\n      const Collection = Collections[name];\n      if (!Collection) {\n        throw new Error(`Collection with name ${name} does not exist`);\n      }\n\n      return Collection.get({\n        Admin,\n        app,\n        getCollection,\n        getLoader\n      });\n    }\n\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    const token = getToken(req);\n    if (token) {\n      try {\n        ({user_id, user} = await loadUserFromToken({token, getCollection}));\n      } catch (error) {\n        load_user_error = error;\n      }\n    }\n\n    return {\n      Admin,\n      app,\n      getCollection,\n      getLoader,\n      token,\n      user_id,\n      user,\n      load_user_error\n    };\n  };\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport makeSchema from './makeSchema';\nimport contextBuilder from './contextBuilder';\n\nfunction getTokenDefault (request) {\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n\nexport default function graphqlHandler ({\n  Admin,\n  app,\n  buildContext,\n  Collections,\n  Controllers,\n  getToken = getTokenDefault,\n  loadUserFromToken,\n  options = {},\n  Scalars,\n  Schema\n}) {\n  if (!buildContext) {\n    buildContext = contextBuilder({Admin, app, Collections, getToken, loadUserFromToken});\n  }\n  const schema = makeSchema({Schema, Controllers, Scalars});\n  const server = new ApolloServer({schema, context: buildContext});\n  return server.createHandler(options);\n}\n"],"names":["isExisting","context","user","isSignedIn","user_id","isPublic","timestampsToDates","obj","type","constructor","name","map","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","message","params","Function","expected","is","DocumentDoesNotExistError","id","NotAuthorizedError","path","Collection","get","args","Admin","app","getCollection","getLoader","Error","auth","collection","firestore","doc","loader","DataLoader","ids","getMany","add","data","omit","timestamp","_timestampField","created_at","updated_at","ref","set","merge","addOrSetByField","field","x","value","findOneByField","getOrAddById","exists","snap","assert","error","_doesNotExistError","_snapToDoc","length","uniques","uniq","refs","getAll","snaps","docs","docs_by_id","find","where","limit","order_by","select","invalid","query","parts","isObject","entries","Array","isArray","part","op","orderBy","isNumber","findOne","delete","Promise","resolve","batch","commit","FieldValue","serverTimestamp","_deleteField","_id","Logger","child","levels","level","prototype","log","console","global","call","_catch","body","recover","e","then","APOLLO_UNION_RESOLVER_NAME","Controller","logger","resolvers","expose","groups","group","definition","info","resolver","authorizer","valid","every","isFunction","debug","load_user_error","authorized","request","list","create","update","load","loadMany","resolveType","getType","schema","stub","makeSchema","Schema","Controllers","Scalars","controller","makeExecutableSchema","typeDefs","contextBuilder","Collections","getToken","loadUserFromToken","req","token","arg","loaders","getTokenDefault","header","prefix","match","replace","graphqlHandler","buildContext","options","server","ApolloServer","createHandler"],"mappings":"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"}