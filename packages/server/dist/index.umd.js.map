{"version":3,"file":"index.umd.js","sources":["../src/logger.js","../src/initialize.js","../src/collections/Collection.js","../src/collections/timestampsToDates.js","../src/Errors.js","../src/collections/FirestoreCollection.js","../src/handlers/graphql/Authorizers.js","../src/handlers/processOptions.js","../src/handlers/graphql/getToken.js","../src/handlers/graphql/contextBuilder.js","../src/handlers/graphql/formatError.js","../src/handlers/graphql/exposeResolvers.js","../src/handlers/graphql/createGraphqlHandler.js","../src/handlers/graphql/GraphQLController.js","../src/handlers/graphql/processSchema.js","../src/handlers/http/createHttpHandler.js","../src/handlers/Handler.js","../src/handlers/http/HttpHandler.js","../src/handlers/pubsub/createPubSubHandler.js","../src/handlers/pubsub/PubSubHandler.js","../src/directGraphqlRequest.js"],"sourcesContent":["import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import default_logger from './logger';\n\nexport default function initialize (options) {\n  const {namespace} = options;\n  const required = [\n    'Admin',\n    'app',\n    'Enums',\n    'getCollection',\n    'getService'\n  ];\n  for (const name of required) {\n    if (!options[name]) {\n      throw new Error(`Missing required argument for ${namespace}: ${name}`);\n    }\n    this[name] = options[name];\n  }\n\n  let {logger} = options;\n  if (!logger) {\n    logger = default_logger;\n  }\n  this.logger = logger.child(`${namespace}:${this.name}`);\n}\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport Promise from 'bluebird';\nimport {singleton} from '@hello10/util';\n\nimport initialize from '../initialize';\n\nexport default class Collection {\n  constructor (options) {\n    initialize.call(this, {namespace: 'Collection', ...options});\n  }\n\n  bucket (name) {\n    return this.Admin.storage().bucket(name);\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, start_at, start_after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, start_at, start_after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas}) {\n    return Promise.map(datas, (data)=> this.create({data}));\n  }\n\n  async findOrCreate ({query, data}) {\n    const doc = await this.findOne({query});\n    return doc || this.create({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id}) {\n    return this.exists({id, assert: true});\n  }\n\n  async existsAll ({ids, assert = false}) {\n    const docs = await this.getAll({ids, assert});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids}) {\n    return this.existsAll({ids, assert: true});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id}) {\n    return this.get({id, assert: true});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids}) {\n    return this.getAll({ids, assert: true});\n  }\n\n  find (/* {query, limit, sort, start_at, start_after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query}) {\n    const docs = await this.find({query, select: ['id']});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, start_at, start_after} = {}) {\n    return this.find({limit, sort, start_at, start_after});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true}) {\n    return this.update({id, data, merge, assert: true});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false}) {\n    this._addUpdatedAt(data);\n    return Promise.map(ids, (id)=> {\n      return this.update({id, data, merge, assert});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true}) {\n    return this.update({ids, data, merge, assert: true});\n  }\n\n  async updateMany ({query, data, merge = true}) {\n    const ids = await this.findIds({query});\n    return this.updateAll({ids, data, merge});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id}) {\n    return this.delete({id, assert: true});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query}) {\n    const ids = await this.findIds({query});\n    return this.deleteAll({ids});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    return new DataLoader(async (ids)=> {\n      this.logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id, doc);\n      }\n\n      return ids.map((id)=> {\n        return lookup.has(id) ? lookup.get(id) : null;\n      });\n    });\n  }\n\n  load (id) {\n    if (!id) {\n      throw new Error('Missing id');\n    }\n    const loader = this.getLoader(this.name);\n    return loader.load(id);\n  }\n\n  loadMany (ids) {\n    if (!ids.length) {\n      return [];\n    }\n    const loader = this.getLoader(this.name);\n    return loader.loadMany(ids);\n  }\n\n  async loadManyCompact (ids) {\n    const docs = await this.loadMany(ids);\n    return compact(docs);\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this._timestamp();\n    }\n    this._addCreatedAt(obj, time);\n    this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    if (!('created_at' in obj)) {\n      obj.created_at = time || this._timestamp();\n    }\n    return obj;\n  }\n\n  _addUpdatedAt (obj, time) {\n    if (!('updated_at' in obj)) {\n      obj.updated_at = time || this._timestamp();\n    }\n    return obj;\n  }\n}\n\nsingleton(Collection);\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from '../Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    return this.add({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, start_at, start_after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = start_after || start_at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = start_after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    const ref = this.doc(id);\n    return ref.delete();\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","// TODO: move this to utils, would be generally useful\nfunction instanceGetter ({Constructors, options}) {\n  return function getter (name) {\n    const Constructor = Constructors[name];\n    if (!Constructor) {\n      const msg = `Constructor with name ${name} does not exist`;\n      throw new Error(msg);\n    }\n    return Constructor.instance(options);\n  };\n}\n\nexport default function processOptions (input) {\n  const {Services, Collections, ...options} = input;\n\n  options.getService = instanceGetter({\n    Constructors: Services,\n    options\n  });\n\n  options.getCollection = instanceGetter({\n    Constructors: Collections,\n    options\n  });\n\n  return options;\n}\n","export default function getToken (request) {\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from '../../logger';\nimport processOptions from '../processOptions';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  loadSession,\n  getToken = getTokenDefault,\n  start = ()=> {},\n  ...options\n}) {\n  return async ({req} = {})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child('contextBuilder');\n\n    await start();\n\n    options = processOptions(options);\n    const {getCollection} = options;\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    const token = getToken(req);\n    if (token) {\n      try {\n        ({session_id, user_id, user} = await loadSession({token, getCollection}));\n        logger.debug('Loaded session', {session_id, user});\n      } catch (error) {\n        logger.error('Error loading session', error);\n        load_user_error = error;\n      }\n    }\n\n    return {\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      getLoader,\n      ...options\n    };\n  };\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from '../../logger';\nimport {GraphQLError} from '../../Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {merge} from 'lodash';\n\nimport logger from '../../logger';\n\nexport default function exposeResolvers ({Controllers, Scalars, options}) {\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\nimport {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport processOptions from '../processOptions';\nimport formatErrorDefault from './formatError';\nimport exposeResolvers from './exposeResolvers';\n\nfunction makeSchema ({Schema, Controllers, Scalars, options}) {\n  const resolvers = exposeResolvers({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n\nexport default function createGraphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n\n  const schema = makeSchema({\n    options: processOptions(opts_controller),\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  const server = new ApolloServer({...opts_server, schema});\n  return server.createHandler(opts_handler);\n}\n","import {isFunction} from 'lodash';\n\nimport initialize from '../../initialize';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from '../../Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class GraphQLController {\n  constructor (options) {\n    // Only initialize if options are passed (we skip when building schema)\n    if (options) {\n      initialize.call(this, {namespace: 'GraphQLController', ...options});\n    }\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection (name) {\n    return this.getCollection(name || this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            rlogger.info('Calling resolver', {obj, args});\n            return resolver.call(this, params);\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error(error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  get    = this._toCollection('get');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create')\n  update = this._wrapToCollection('update');\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const {id} = request.args;\n    const collection = this.collection(request);\n    const deleted = await collection.delete({id});\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      const collection = this.collection(request);\n      return collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const collection = this.collection(request);\n\n      let {data} = request.args;\n      if (this[before]) {\n        data = await this[before](request);\n      }\n\n      let doc = await collection[method]({data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n}\n","import {get, difference} from 'lodash';\n\nimport exposeResolvers from './exposeResolvers';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = exposeResolvers({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n","import Express from 'express';\nimport Cors from 'cors';\n\nimport processOptions from '../processOptions';\n\nexport default function createHttpHandler ({Handler, options}) {\n  const app = Express();\n  const cors = Cors(options.cors);\n  app.use(cors);\n\n  options = processOptions(options.handler);\n  const handler = new Handler(options);\n  handler.expose(app);\n\n  return app;\n}\n","import initialize from '../initialize';\n\nexport default class Handler {\n  constructor ({start, ...options}) {\n    this.start = start;\n    initialize.call(this, {namespace: 'Handler', ...options});\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  actions () {\n    throw new Error('Handler should implement actions');\n  }\n\n  expose () {\n    throw new Error('Handler should implement expose');\n  }\n}\n","import Handler from '../Handler';\n\nexport default class HttpHandler extends Handler {\n  expose (app) {\n    let actions = this.actions();\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([route, action])=> {\n        if (!route.includes(' ')) {\n          route = `GET ${route}`;\n        }\n        const [method, path] = route.split(/\\s+/);\n        return {method, path, action};\n      });\n    }\n\n    for (const {method, path, action} of actions) {\n      const fn = method.toLowerCase();\n      app[fn](path, this.handle(action));\n    }\n\n    return app;\n  }\n\n  handle (action) {\n    return async (request, response)=> {\n      await this.start();\n\n      const {params} = request;\n      const logger = this.logger.child({action, params});\n\n      try {\n        logger.info('Handler running');\n        const method = this[action].bind(this);\n        const data = await method({params, request, response});\n        logger.info('Handler success', {data});\n        return response.json(data);\n      } catch (error) {\n        logger.error('Handler failure', error);\n        return response\n          .status(error.status || 500)\n          .json({error: error.message});\n      }\n    };\n  }\n}\n","import processOptions from '../processOptions';\n\nexport default function createPubSubHandler ({Handler, options}) {\n  options = processOptions(options.handler);\n  const handler = new Handler(options);\n  return handler.expose();\n}\n","import Handler from '../Handler';\n\nexport default class PubSubHandler extends Handler {\n  expose (topic) {\n    let actions = this.actions(topic);\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([topic, action])=> {\n        return {topic, action};\n      });\n    }\n\n    return actions.map(({topic, action})=> {\n      const handler = this.handle(action);\n      return {topic, handler};\n    });\n  }\n\n  handle (action) {\n    return async (message, context)=> {\n      await this.start();\n\n      const {json, data, attributes} = message;\n      const logger = this.logger.child({action, message, context});\n\n      try {\n        logger.info('Handler running');\n        const method = this[action].bind(this);\n        const response = await method({json, data, attributes, context});\n        logger.info('Handler success', response);\n      } catch (error) {\n        logger.error('Handler failure', error);\n      }\n    };\n  }\n}\n","import {graphql} from 'graphql';\n\nimport logger from './logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({Schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(Schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n"],"names":["logger","Logger","initialize","options","namespace","required","name","Error","default_logger","child","Collection","constructor","call","bucket","Admin","storage","collection","create","createAll","datas","Promise","map","data","findOrCreate","query","findOne","doc","exists","existsAssert","id","assert","existsAll","ids","getAll","docs","every","existsAllAssert","get","getAssert","getAllAssert","find","sort","select","limit","length","findIds","list","start_at","start_after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","message","lookup","Map","set","has","load","getLoader","loadMany","loadManyCompact","compact","_timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","updated_at","singleton","timestampsToDates","type","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","params","Function","expected","is","DoesNotExistError","missing","join","NotAuthorizedError","path","FirestoreCollection","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","isNumber","invalid","cursor","Array","isArray","field","parts","isObject","entries","value","part","op","where","orderBy","start","fn","args","batch","commit","omit","getOrAddById","x","user","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","isExisting","context","isSignedIn","user_id","isPublic","instanceGetter","Constructors","getter","Constructor","msg","instance","processOptions","input","Services","Collections","getService","getCollection","getToken","request","header","prefix","match","replace","body","recover","e","then","contextBuilder","loadSession","getTokenDefault","req","base_logger","session_id","load_user_error","arg","loaders","token","error","formatError","GraphQL","originalError","oerror","public_error","exposeResolvers","Controllers","Scalars","resolvers","Controller","controller","expose","makeSchema","Schema","makeExecutableSchema","typeDefs","createGraphqlHandler","server","opts_server","handler","opts_handler","opts_controller","formatErrorDefault","schema","ApolloServer","createHandler","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","GraphQLController","_toCollection","_wrapToCollection","groups","group","definition","info","isFunction","resolver","authorizer","rlogger","authorized","resolveType","getType","stub","deleted","deleted_at","afterDelete","beforeDelete","method","cmethod","before","after","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","errors","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema","createHttpHandler","Handler","Express","cors","Cors","use","actions","HttpHandler","route","action","split","toLowerCase","handle","response","bind","json","status","createPubSubHandler","PubSubHandler","topic","attributes","directGraphqlRequest","variables","root","graphql"],"mappings":"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"}