{"version":3,"file":"index.umd.js","sources":["../src/Errors.js","../src/logger.js","../src/initialize.js","../src/collections/Collection.js","../src/collections/timestampsToDates.js","../src/collections/FirestoreCollection.js","../src/handlers/graphql/Authorizers.js","../src/handlers/addInstanceGetters.js","../src/handlers/graphql/getToken.js","../src/handlers/graphql/contextBuilder.js","../src/handlers/graphql/formatError.js","../src/handlers/graphql/exposeResolvers.js","../src/handlers/graphql/makeSchema.js","../src/handlers/graphql/createGraphqlHandler.js","../src/handlers/graphql/directGraphqlRequest.js","../src/handlers/graphql/directGraphqlRequester.js","../src/handlers/graphql/GraphQLController.js","../src/handlers/graphql/processSchema.js","../src/handlers/http/createHttpHandler.js","../src/handlers/Handler.js","../src/handlers/http/HttpHandler.js","../src/handlers/pubsub/createPubSubHandler.js","../src/handlers/pubsub/PubSubHandler.js"],"sourcesContent":["import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'Server error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import default_logger from './logger';\n\nexport default function initialize (options) {\n  const {namespace} = options;\n  const required = [\n    'Admin',\n    'Enums',\n    'getCollection',\n    'getService'\n  ];\n  for (const name of required) {\n    if (!options[name]) {\n      throw new Error(`Missing required argument for ${namespace}: ${name}`);\n    }\n    this[name] = options[name];\n  }\n\n  let {logger} = options;\n  if (!logger) {\n    logger = default_logger;\n  }\n  this.logger = logger.child(`${namespace}:${this.name}`);\n}\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport Promise from 'bluebird';\nimport {singleton} from '@hello10/util';\n\nimport initialize from '../initialize';\n\nexport default class Collection {\n  constructor (options) {\n    initialize.call(this, {namespace: 'Collection', ...options});\n  }\n\n  bucket (name) {\n    return this.Admin.storage().bucket(name);\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, at, after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, at, after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas}) {\n    return Promise.map(datas, (data)=> this.create({data}));\n  }\n\n  async findOrCreate ({query, data}) {\n    const doc = await this.findOne({query});\n    return doc || this.create({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id}) {\n    return this.exists({id, assert: true});\n  }\n\n  async existsAll ({ids, assert = false}) {\n    const docs = await this.getAll({ids, assert});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids}) {\n    return this.existsAll({ids, assert: true});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id}) {\n    return this.get({id, assert: true});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids}) {\n    return this.getAll({ids, assert: true});\n  }\n\n  find (/* {query, limit, sort, at, after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query}) {\n    const docs = await this.find({query, select: ['id']});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, at, after} = {}) {\n    return this.find({limit, sort, at, after});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true}) {\n    return this.update({id, data, merge, assert: true});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false}) {\n    this._addUpdatedAt(data);\n    return Promise.map(ids, (id)=> {\n      return this.update({id, data, merge, assert});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true}) {\n    return this.update({ids, data, merge, assert: true});\n  }\n\n  async updateMany ({query, data, merge = true}) {\n    const ids = await this.findIds({query});\n    return this.updateAll({ids, data, merge});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id}) {\n    return this.delete({id, assert: true});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query}) {\n    const ids = await this.findIds({query});\n    return this.deleteAll({ids});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    const loader = new DataLoader(async (ids)=> {\n      this.logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id.toString(), doc);\n      }\n\n      return ids.map((id)=> {\n        const id_s = id.toString();\n        return lookup.has(id_s) ? lookup.get(id_s) : null;\n      });\n    });\n\n    loader.loadManyCompact = async function loadManyCompact (ids) {\n      const docs = await loader.loadMany(ids);\n      return compact(docs);\n    };\n\n    return loader;\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this._timestamp();\n    }\n    this._addCreatedAt(obj, time);\n    this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    if (!('created_at' in obj)) {\n      obj.created_at = time || this._timestamp();\n    }\n    return obj;\n  }\n\n  _addUpdatedAt (obj, time) {\n    if (!('updated_at' in obj)) {\n      obj.updated_at = time || this._timestamp();\n    }\n    return obj;\n  }\n}\n\nsingleton(Collection);\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from '../Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get firestore () {\n    return this.app.firestore();\n  }\n\n  get collection () {\n    return this.firestore.collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    return this.add({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(...refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, at, after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = after || at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    const ref = this.doc(id);\n    return ref.delete();\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import logger from '../logger';\n\n// TODO: move this to utils, would be generally useful\nfunction instanceGetter ({Constructors, options}) {\n  return function getter (name) {\n    if (!(name in Constructors)) {\n      const msg = `Constructor with name ${name} does not exist`;\n      throw new Error(msg);\n    }\n    const Constructor = Constructors[name];\n    return Constructor.instance(options);\n  };\n}\n\nexport default function addInstanceGetters (input) {\n  logger.debug('Processing options', {\n    name: 'addInstanceGetters',\n    input\n  });\n  const {Services, Collections, ...options} = input;\n\n  options.getService = instanceGetter({\n    Constructors: Services,\n    options\n  });\n\n  options.getCollection = instanceGetter({\n    Constructors: Collections,\n    options\n  });\n\n  return options;\n}\n","export default function getToken (request) {\n  if (!request) {\n    return null;\n  }\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  loadSession,\n  getToken = getTokenDefault,\n  start = ()=> {},\n  ...input_options\n}) {\n  return async ({req: request} = {})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child('contextBuilder');\n\n    await start();\n\n    const options = addInstanceGetters(input_options);\n    const {getCollection} = options;\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    try {\n      logger.debug('Getting token');\n      const token = getToken(request);\n      logger.debug('Loading session');\n      const session = await loadSession({token, getCollection, getLoader});\n      ({session_id, user_id, user} = session);\n      logger.debug('Loaded session', {session_id, user});\n    } catch (error) {\n      logger.error('Error loading session', error);\n      load_user_error = error;\n    }\n\n    return {\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      getLoader,\n      ...options\n    };\n  };\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from '../../logger';\nimport {GraphQLError} from '../../Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {merge} from 'lodash';\n\nimport base_logger from '../../logger';\n\nexport default function exposeResolvers ({Controllers, Scalars, options}) {\n  const logger = base_logger.child('exposeResolvers');\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\n\nimport exposeResolvers from './exposeResolvers';\nimport addInstanceGetters from '../addInstanceGetters';\nimport logger from '../../logger';\n\nexport default function makeSchema ({Schema, Controllers, Scalars, options = {}}) {\n  logger.debug('Making schema', {name: 'makeSchema', options});\n  options = addInstanceGetters(options);\n  const resolvers = exposeResolvers({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport base_logger from '../../logger';\nimport formatErrorDefault from './formatError';\nimport makeSchema from './makeSchema';\n\nexport default function createGraphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const logger = base_logger.child({\n    name: 'createGraphqlHandler',\n    options\n  });\n\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  const schema = makeSchema({\n    options: opts_controller,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  logger.debug('Creating ApolloServer', {options: opts_server});\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n  const server = new ApolloServer({...opts_server, schema});\n\n  logger.debug('Creating GraphQL handler', {options: opts_handler});\n  return server.createHandler(opts_handler);\n}\n","import {graphql} from 'graphql';\n\nimport logger from '../../logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n","import directGraphqlRequest from './directGraphqlRequest';\nimport makeSchema from './makeSchema';\n\nexport default function directGraphqlRequester ({\n  Schema,\n  Controllers,\n  Scalars,\n  options,\n  buildContext\n}) {\n  const schema = makeSchema({Schema, Controllers, Scalars, options});\n  return async function request ({query, variables}) {\n    const context = await buildContext();\n    return directGraphqlRequest({schema, context, query, variables});\n  };\n}\n","import {isFunction, get} from 'lodash';\n\nimport initialize from '../../initialize';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from '../../Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class GraphQLController {\n  constructor (options) {\n    // Only initialize if options are passed (we skip when building schema)\n    if (options) {\n      initialize.call(this, {namespace: 'GraphQLController', ...options});\n    }\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  get collection () {\n    return this.getCollection(this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user,\n            obj,\n            args\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            const result = await resolver.call(this, params);\n            rlogger.info('Resolver result', {result});\n            return result;\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error(error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, path}) {\n    return (request)=> {\n      const loader = request.context.getLoader(collection);\n      const id = get(request, path);\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, path}) {\n    return (request)=> {\n      const loader = request.context.getLoader(collection);\n      const ids = get(request, path);\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return (request)=> {\n      const type = getType(request);\n      return request.info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  addSessionUserId (key) {\n    return ({data, context})=> {\n      return {\n        ...data,\n        [key]: context.user.id\n      };\n    };\n  }\n\n  pass ({obj, info}) {\n    const attr = info.fieldName;\n    return obj[attr];\n  }\n\n  polyRef ({obj, info, context}) {\n    const {fieldName: name} = info;\n    const type = obj[`${name}_type`];\n    const id = obj[`${name}_id`];\n    if (!(type && id)) {\n      return null;\n    }\n    const Loader = context.getLoader(type);\n    return Loader.load(id);\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create');\n  update = this._wrapToCollection('update');\n\n  get = this.load({\n    collection: this.name,\n    path: 'args.id'\n  });\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const deleted = await this.collection.delete(request.args);\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      return this.collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const {args} = request;\n\n      let {data} = args;\n      if (this[before]) {\n        data = await this[before]({...request, data});\n      }\n\n      let doc = await this.collection[method]({...args, data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n}\n","import {get, difference} from 'lodash';\n\nimport exposeResolvers from './exposeResolvers';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = exposeResolvers({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n","import Express from 'express';\nimport Cors from 'cors';\n\nimport logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\n\nexport default function createHttpHandler ({Handler, options}) {\n  const app = Express();\n  const cors = Cors(options.cors);\n  app.use(cors);\n\n  options = addInstanceGetters(options.handler);\n\n  logger.debug('Creating HTTP Handler', {\n    name: 'createHttpHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  handler.expose(app);\n\n  return app;\n}\n","import initialize from '../initialize';\n\nexport default class Handler {\n  constructor ({start, ...options}) {\n    this.start = start;\n    initialize.call(this, {namespace: 'Handler', ...options});\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  actions () {\n    throw new Error('Handler should implement actions');\n  }\n\n  expose () {\n    throw new Error('Handler should implement expose');\n  }\n}\n","import Handler from '../Handler';\n\nexport default class HttpHandler extends Handler {\n  expose (app) {\n    let actions = this.actions();\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([route, action])=> {\n        if (!route.includes(' ')) {\n          route = `GET ${route}`;\n        }\n        const [method, path] = route.split(/\\s+/);\n        return {method, path, action};\n      });\n    }\n\n    for (const {method, path, action} of actions) {\n      const fn = method.toLowerCase();\n      app[fn](path, this.handle(action));\n    }\n\n    return app;\n  }\n\n  handle (action) {\n    return async (request, response)=> {\n      await this.start();\n\n      const {params} = request;\n      const logger = this.logger.child({action, params});\n\n      try {\n        logger.info('Calling handler');\n        const method = this[action].bind(this);\n        const data = await method({params, request, response});\n        logger.info('Handler success', {data});\n        return response.json(data);\n      } catch (error) {\n        logger.error('Handler failure', error);\n        return response\n          .status(error.status || 500)\n          .json({error: error.message});\n      }\n    };\n  }\n}\n","import logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\n\nexport default function createPubSubHandler ({Handler, options}) {\n  options = addInstanceGetters(options.handler);\n\n  logger.debug('Creating PubSub Handler', {\n    name: 'createPubSubHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  return handler.expose();\n}\n","import Handler from '../Handler';\n\nexport default class PubSubHandler extends Handler {\n  expose (topic) {\n    let actions = this.actions(topic);\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([topic, action])=> {\n        return {topic, action};\n      });\n    }\n\n    return actions.map(({topic, action})=> {\n      const handler = this.handle(action);\n      return {topic, handler};\n    });\n  }\n\n  handle (action) {\n    return async (message, context)=> {\n      console.log('calling pubsub start...');\n      await this.start();\n\n      const {json, data, attributes} = message;\n      const logger = this.logger.child({\n        name: 'handle',\n        json,\n        attributes,\n        context\n      });\n\n      try {\n        logger.info('Running handler');\n        const args = {json, data, attributes, context};\n        const response = await action.call(this, args);\n        logger.info('Handler success', response);\n      } catch (error) {\n        logger.error('Handler failure', error);\n      }\n    };\n  }\n}\n"],"names":["GraphQLError","ApolloError","constructor","code","message","params","Function","expected","is","DoesNotExistError","type","id","ids","query","missing","join","NotAuthorizedError","path","logger","Logger","initialize","options","namespace","required","name","Error","default_logger","child","Collection","call","bucket","Admin","storage","collection","create","createAll","datas","Promise","map","data","findOrCreate","findOne","doc","exists","existsAssert","assert","existsAll","getAll","docs","every","existsAllAssert","get","getAssert","getAllAssert","find","sort","select","limit","length","findIds","list","at","after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","lookup","Map","set","toString","id_s","has","loadManyCompact","loadMany","compact","_timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","updated_at","singleton","timestampsToDates","Object","keys","reduce","result","k","toDate","FirestoreCollection","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","isNumber","invalid","cursor","Array","isArray","field","parts","isObject","entries","value","part","op","where","orderBy","start","fn","args","batch","commit","omit","getOrAddById","x","user","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","isExisting","context","isSignedIn","user_id","isPublic","instanceGetter","Constructors","getter","msg","Constructor","instance","addInstanceGetters","input","Services","Collections","getService","getCollection","getToken","request","header","prefix","match","replace","body","recover","e","then","contextBuilder","loadSession","getTokenDefault","input_options","req","base_logger","session_id","load_user_error","getLoader","arg","loaders","token","session","error","formatError","GraphQL","originalError","oerror","public_error","exposeResolvers","Controllers","Scalars","resolvers","Controller","controller","expose","makeSchema","Schema","makeExecutableSchema","typeDefs","createGraphqlHandler","server","opts_server","handler","opts_handler","opts_controller","schema","formatErrorDefault","ApolloServer","createHandler","directGraphqlRequest","variables","rlogger","root","graphql","response","errors","directGraphqlRequester","buildContext","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","GraphQLController","_toCollection","_wrapToCollection","load","groups","group","definition","info","isFunction","resolver","authorizer","authorized","resolveType","getType","stub","addSessionUserId","key","pass","attr","fieldName","polyRef","Loader","deleted","deleted_at","afterDelete","beforeDelete","method","cmethod","before","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema","createHttpHandler","Handler","Express","cors","Cors","use","actions","HttpHandler","route","action","split","toLowerCase","handle","bind","json","status","createPubSubHandler","PubSubHandler","topic","console","log","attributes"],"mappings":"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"}