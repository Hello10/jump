{"version":3,"file":"index.umd.js","sources":["../src/Authorizers.js","../src/Collection.js","../src/timestampsToDates.js","../src/Errors.js","../src/FirestoreCollection.js","../src/logger.js","../src/Controller.js","../src/getToken.js","../src/contextBuilder.js","../src/directGraphqlRequest.js","../src/expose.js","../src/makeSchema.js","../src/formatError.js","../src/graphqlHandler.js","../src/processSchema.js"],"sourcesContent":["export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import DataLoader from 'dataloader';\n\nexport default class Collection {\n  static get (args) {\n    return new this(args);\n  }\n\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  get loader () {\n    return new DataLoader((ids)=> {\n      return this.getMany({ids});\n    });\n  }\n\n  //////////\n  // CRUD //\n  //////////\n\n  // TODO: generalize the safe thing derp\n\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  exists (/* {id} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  get (/* {id, safe = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getSafe ({id}) {\n    return this.get({id, safe: true});\n  }\n\n  getMany (/* {ids, safe = false} */) {\n    throw new Error('Collection child class must implement .getMany');\n  }\n\n  getManySafe ({ids}) {\n    return this.getMany({ids, safe: true});\n  }\n\n  find () {\n    // TODO:\n  }\n\n  set (/* {id, data, safe = false} */) {\n    throw new Error('Collection child class must implement .set');\n  }\n\n  setSafe ({id, data}) {\n    return this.setMany({id, data, safe: true});\n  }\n\n  merge (/* {id, data, safe = false} */) {\n    throw new Error('Collection child class must implement .merge');\n  }\n\n  mergeSafe ({id, data}) {\n    return this.merge({id, data, safe: true});\n  }\n\n  delete (/* {id, safe = false} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteSafe ({id}) {\n    return this.delete({id, safe: true});\n  }\n}\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  }) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DocumentDoesNotExistError extends GraphQLError {\n  constructor (params) {\n    const {type, id} = params;\n    super({\n      code: 'DocumentDoesNotExist',\n      message: `Document ${type} with id ${id} does not exist`,\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DocumentDoesNotExistError} from './Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor ({Admin, app, getCollection, getLoader}) {\n    super();\n    this.Admin = Admin;\n    this.app = app;\n    this.getCollection = getCollection;\n    this.getLoader = getLoader;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  //////////\n  // CRUD //\n  //////////\n  async add ({data}) {\n    data = omit(data, 'id');\n    const timestamp = this._timestampField();\n    data.created_at = timestamp;\n    data.updated_at = timestamp;\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async set ({id, data, merge = true}) {\n    data = omit(data, 'id');\n    data.updated_at = this._timestampField();\n    const ref = this.doc(id);\n    await ref.set(data, {merge});\n    return this.get({id});\n  }\n\n  async addOrSetByField ({field, data, add = (x)=> x}) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  async exists ({id}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    return snap.exists;\n  }\n\n  async get ({id, safe = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (safe && !snap.exists) {\n      const type = this.name();\n      throw new DocumentDoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAssert ({id}) {\n    return this.get({id, safe: true});\n  }\n\n  async getMany ({ids}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    return ids.map((id)=> {\n      return (id in docs_by_id) ? docs_by_id[id] : null;\n    });\n  }\n\n  async find ({where, limit, order_by, select} = {}) {\n    let query = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (where) {\n      let parts;\n      if (isObject(where)) {\n        parts = Object.entries(where).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(where)) {\n        parts = Array.isArray(where[0]) ? where : [where];\n      } else {\n        invalid('where');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('where');\n        }\n        const [field, op, value] = part;\n        query = query.where(field, op, value);\n      }\n    }\n\n    if (order_by) {\n      if (!Array.isArray(order_by)) {\n        order_by = [order_by];\n      }\n      query = query.orderBy(...order_by);\n    }\n\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      query = query.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      query = query.select(...select);\n    }\n\n    const snap = await query.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  async findOne ({where, order_by, select}) {\n    const docs = await this.find({\n      limit: 1,\n      where,\n      order_by,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        where: [field, '==', value]\n      });\n    };\n  }\n\n  async delete ({id, ids, where}) {\n    if (id) {\n      const ref = this.doc(id);\n      return ref.delete();\n    }\n\n    if (ids && where) {\n      throw new Error('Delete call should pass ids or where not both');\n    }\n\n    if (where) {\n      const docs = await this.find({where});\n      ids = docs.map(({id})=> id);\n    }\n\n    if (ids.length === 0) {\n      return Promise.resolve();\n    }\n\n    const batch = this.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestampField () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import {isFunction} from 'lodash';\n\nimport base_logger from './logger';\n\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from './Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class Controller {\n  constructor (options = {}) {\n    this.options = options;\n    this.logger = base_logger.child('Controller');\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  static resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection ({context, name}) {\n    return context.getCollection(name || this.name);\n  }\n\n  loader ({context, name}) {\n    return context.getLoader(name || this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            rlogger.info('Calling resolver', {obj, args});\n            return resolver.call(this, params);\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error('Unexpected GraphQL error', error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n  // Delegate all the reads derp\n  // TODO: move to loop at end adding to proto\n  exists = this._toCollection('exists');\n  get = this._toCollection('get');\n  list = this._toCollection('list');\n  create = this._wrapToCollection('create')\n  set = this._wrapToCollection('set');\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const {id} = request.args;\n    const deleted = await this.delete({id});\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      const collection = this.collection(request);\n      return collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const collection = this.collection(request);\n\n      let {data} = request.args;\n      if (this[before]) {\n        data = await this[before](request);\n      }\n\n      let doc = await collection[method]({data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n}\n","export default function getToken (request) {\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from './logger';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  Collections,\n  loadSession,\n  options,\n  getToken = getTokenDefault,\n  onLoad = ()=> {}\n}) {\n  let loaded = false;\n  return async ({req})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child({\n      name: 'contextBuilder',\n      req: {\n        url: req.url,\n        method: req.method,\n        protocol: req.protocol,\n        requestId: req.requestId,\n        ip: req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        headers: req.headers\n      }\n    });\n\n    if (!loaded) {\n      logger.debug('calling onLoad');\n      await onLoad();\n      loaded = true;\n    }\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    function getCollection (arg) {\n      const name = arg.name || arg;\n      const Collection = Collections[name];\n      if (!Collection) {\n        const msg = `Collection with name ${name} does not exist`;\n        logger.error(msg);\n        throw new Error(msg);\n      }\n\n      return Collection.get({\n        getCollection,\n        getLoader,\n        ...options\n      });\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    const token = getToken(req);\n    if (token) {\n      try {\n        ({session_id, user_id, user} = await loadSession({token, getCollection}));\n        logger.debug('Loaded session', {session_id, user});\n      } catch (error) {\n        logger.error('Error loading session', error);\n        load_user_error = error;\n      }\n    }\n\n    return {\n      getCollection,\n      getLoader,\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      ...options\n    };\n  };\n}\n","import {graphql} from 'graphql';\n\nimport logger from './logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({Schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(Schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n","import {merge} from 'lodash';\n\nimport logger from './logger';\n\nexport default function expose ({Controllers, Scalars, options}) {\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    // TODO: shouldn't need to instantiate each controller per request,\n    // just figure out the dispatch and then instantiate on demand unless\n    // there's some memoization that can be done between requests.\n    // that way context also becomes part of this instead of only request var\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\n\nimport expose from './expose';\n\nexport default function makeSchema ({Schema, Controllers, Scalars, options}) {\n  const resolvers = expose({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","import * as GraphQL from 'graphql';\n\nimport {GraphQLError} from './Errors';\n\nexport default function formatError (error) {\n  console.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport makeSchema from './makeSchema';\nimport formatErrorDefault from './formatError';\n\nexport default function graphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n\n  const schema = makeSchema({\n    options: opts_controller,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  const server = new ApolloServer({...opts_server, schema});\n  return server.createHandler(opts_handler);\n}\n","import {get, difference} from 'lodash';\n\nimport expose from './expose';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = expose({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n"],"names":["isExisting","context","user","isSignedIn","user_id","isPublic","Collection","get","args","name","Error","collection","loader","DataLoader","ids","getMany","create","exists","getSafe","id","safe","getManySafe","find","set","setSafe","data","setMany","merge","mergeSafe","delete","deleteSafe","timestampsToDates","obj","type","constructor","map","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","message","params","Function","expected","is","DocumentDoesNotExistError","NotAuthorizedError","path","FirestoreCollection","Admin","app","getCollection","getLoader","auth","firestore","doc","add","omit","timestamp","_timestampField","created_at","updated_at","ref","addOrSetByField","field","x","value","findOneByField","getOrAddById","snap","_snapToDoc","getAssert","length","uniques","uniq","refs","getAll","snaps","docs","docs_by_id","where","limit","order_by","select","invalid","query","parts","isObject","entries","Array","isArray","part","op","orderBy","isNumber","findOne","Promise","resolve","batch","commit","FieldValue","serverTimestamp","_deleteField","_id","logger","Logger","body","recover","e","then","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","Controller","options","_toCollection","list","_wrapToCollection","base_logger","child","resolvers","expose","groups","group","definition","info","call","isFunction","resolver","authorizer","rlogger","debug","load_user_error","authorized","error","request","deleted","deleted_at","Date","afterDelete","beforeDelete","method","cmethod","before","after","load","loadMany","resolveType","getType","schema","stub","getToken","header","prefix","match","replace","contextBuilder","Collections","loadSession","getTokenDefault","onLoad","loaded","req","session_id","arg","loaders","msg","token","url","protocol","requestId","ip","headers","connection","remoteAddress","directGraphqlRequest","Schema","variables","root","graphql","response","errors","Controllers","Scalars","controller","makeSchema","makeExecutableSchema","typeDefs","formatError","console","GraphQL","originalError","oerror","public_error","graphqlHandler","server","opts_server","handler","opts_handler","opts_controller","formatErrorDefault","ApolloServer","createHandler","processDefinitions","definitions","enums","Query","Mutation","Type","kind","push","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema"],"mappings":"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"}