{"version":3,"file":"index.umd.js","sources":["../src/Errors.js","../src/logger.js","../src/initialize.js","../src/collections/Collection.js","../src/collections/timestampsToDates.js","../src/collections/FirestoreCollection.js","../src/handlers/graphql/Authorizers.js","../src/handlers/addInstanceGetters.js","../src/handlers/graphql/getToken.js","../src/handlers/graphql/contextBuilder.js","../src/handlers/graphql/formatError.js","../src/handlers/graphql/exposeResolvers.js","../src/handlers/graphql/makeSchema.js","../src/handlers/graphql/createGraphqlHandler.js","../src/handlers/graphql/directGraphqlRequest.js","../src/handlers/graphql/directGraphqlRequester.js","../src/handlers/graphql/GraphQLController.js","../src/handlers/graphql/processSchema.js","../src/handlers/http/createHttpHandler.js","../src/handlers/Handler.js","../src/handlers/http/HttpHandler.js","../src/handlers/pubsub/createPubSubHandler.js","../src/handlers/pubsub/PubSubHandler.js"],"sourcesContent":["import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'Server error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import default_logger from './logger';\n\nexport default function initialize (options) {\n  const {namespace} = options;\n  const required = [\n    'Admin',\n    'Enums',\n    'getCollection',\n    'getService'\n  ];\n  for (const name of required) {\n    if (!options[name]) {\n      throw new Error(`Missing required argument for ${namespace}: ${name}`);\n    }\n    this[name] = options[name];\n  }\n\n  let {logger} = options;\n  if (!logger) {\n    logger = default_logger;\n  }\n  this.logger = logger.child(`${namespace}:${this.name}`);\n}\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport {mapp, singleton} from '@hello10/util';\n\nimport initialize from '../initialize';\n\nexport default class Collection {\n  constructor (options) {\n    initialize.call(this, {namespace: 'Collection', ...options});\n  }\n\n  bucket (name) {\n    return this.Admin.storage().bucket(name);\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, at, after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, at, after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas}) {\n    return mapp(datas, (data)=> this.create({data}));\n  }\n\n  async findOrCreate ({query, data}) {\n    const doc = await this.findOne({query});\n    return doc || this.create({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id}) {\n    return this.exists({id, assert: true});\n  }\n\n  async existsAll ({ids, assert = false}) {\n    const docs = await this.getAll({ids, assert});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids}) {\n    return this.existsAll({ids, assert: true});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id}) {\n    return this.get({id, assert: true});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids}) {\n    return this.getAll({ids, assert: true});\n  }\n\n  find (/* {query, limit, sort, at, after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query}) {\n    const docs = await this.find({query, select: ['id']});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, at, after} = {}) {\n    return this.find({limit, sort, at, after});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true}) {\n    return this.update({id, data, merge, assert: true});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false}) {\n    this._addUpdatedAt(data);\n    return mapp(ids, (id)=> {\n      return this.update({id, data, merge, assert});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true}) {\n    return this.update({ids, data, merge, assert: true});\n  }\n\n  async updateMany ({query, data, merge = true}) {\n    const ids = await this.findIds({query});\n    return this.updateAll({ids, data, merge});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id}) {\n    return this.delete({id, assert: true});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query}) {\n    const ids = await this.findIds({query});\n    return this.deleteAll({ids});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    const loader = new DataLoader(async (ids)=> {\n      this.logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id.toString(), doc);\n      }\n\n      return ids.map((id)=> {\n        const id_s = id.toString();\n        return lookup.has(id_s) ? lookup.get(id_s) : null;\n      });\n    });\n\n    loader.loadManyCompact = async function loadManyCompact (ids) {\n      const docs = await loader.loadMany(ids);\n      return compact(docs);\n    };\n\n    return loader;\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this.timestamp();\n    }\n    this._addCreatedAt(obj, time);\n    this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    if (!('created_at' in obj)) {\n      obj.created_at = time || this.timestamp();\n    }\n    return obj;\n  }\n\n  _addUpdatedAt (obj, time) {\n    if (!('updated_at' in obj)) {\n      obj.updated_at = time || this.timestamp();\n    }\n    return obj;\n  }\n}\n\nsingleton(Collection);\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from '../Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get firestore () {\n    return this.app.firestore();\n  }\n\n  get collection () {\n    return this.firestore.collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    const {id} = await this.add({data});\n    return this.get({id});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(...refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, at, after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = after || at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    const doc = await this.get({id, assert});\n    if (doc) {\n      const ref = this.doc(id);\n      await ref.delete();\n    }\n    return doc;\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import logger from '../logger';\n\n// TODO: move this to utils, would be generally useful\nfunction instanceGetter ({Constructors, options}) {\n  return function getter (name) {\n    if (!(name in Constructors)) {\n      const msg = `Constructor with name ${name} does not exist`;\n      throw new Error(msg);\n    }\n    const Constructor = Constructors[name];\n    return Constructor.instance(options);\n  };\n}\n\nexport default function addInstanceGetters (input) {\n  logger.debug('Processing options', {\n    name: 'addInstanceGetters',\n    input\n  });\n  const {Services, Collections, ...options} = input;\n\n  options.getService = instanceGetter({\n    Constructors: Services,\n    options\n  });\n\n  options.getCollection = instanceGetter({\n    Constructors: Collections,\n    options\n  });\n\n  return options;\n}\n","export default function getToken (request) {\n  if (!request) {\n    return null;\n  }\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  loadSession,\n  getToken = getTokenDefault,\n  start = ()=> {},\n  ...input_options\n}) {\n  return async ({req: request} = {})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child('contextBuilder');\n\n    await start();\n\n    const options = addInstanceGetters(input_options);\n    const {getCollection} = options;\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    try {\n      logger.debug('Getting token');\n      const token = getToken(request);\n      logger.debug('Loading session');\n      const session = await loadSession({token, getCollection, getLoader});\n      ({session_id, user_id, user} = session);\n      logger.debug('Loaded session', {session_id, user});\n    } catch (error) {\n      logger.error('Error loading session', error);\n      load_user_error = error;\n    }\n\n    return {\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      getLoader,\n      ...options\n    };\n  };\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from '../../logger';\nimport {GraphQLError} from '../../Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {merge} from 'lodash';\n\nimport base_logger from '../../logger';\n\nexport default function exposeResolvers ({Controllers, Scalars, options}) {\n  const logger = base_logger.child('exposeResolvers');\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\n\nimport exposeResolvers from './exposeResolvers';\nimport addInstanceGetters from '../addInstanceGetters';\nimport logger from '../../logger';\n\nexport default function makeSchema ({Schema, Controllers, Scalars, options = {}}) {\n  logger.debug('Making schema', {name: 'makeSchema', options});\n  options = addInstanceGetters(options);\n  const resolvers = exposeResolvers({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport base_logger from '../../logger';\nimport formatErrorDefault from './formatError';\nimport makeSchema from './makeSchema';\n\nexport default function createGraphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const logger = base_logger.child({\n    name: 'createGraphqlHandler',\n    options\n  });\n\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  const schema = makeSchema({\n    options: opts_controller,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  logger.debug('Creating ApolloServer', {options: opts_server});\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n  const server = new ApolloServer({...opts_server, schema});\n\n  logger.debug('Creating GraphQL handler', {options: opts_handler});\n  return server.createHandler(opts_handler);\n}\n","import {graphql} from 'graphql';\n\nimport logger from '../../logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n","import directGraphqlRequest from './directGraphqlRequest';\nimport makeSchema from './makeSchema';\n\nexport default function directGraphqlRequester ({\n  Schema,\n  Controllers,\n  Scalars,\n  options,\n  buildContext\n}) {\n  const schema = makeSchema({Schema, Controllers, Scalars, options});\n  return async function request ({query, variables}) {\n    const context = await buildContext();\n    return directGraphqlRequest({schema, context, query, variables});\n  };\n}\n","import {isFunction, get} from 'lodash';\n\nimport initialize from '../../initialize';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from '../../Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class GraphQLController {\n  constructor (options) {\n    // Only initialize if options are passed (we skip when building schema)\n    if (options) {\n      initialize.call(this, {namespace: 'GraphQLController', ...options});\n    }\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  get collection () {\n    return this.getCollection(this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user,\n            obj,\n            args\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            const result = await resolver.call(this, params);\n            rlogger.info('Resolver result', {result});\n            return result;\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error(error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, path}) {\n    return (request)=> {\n      const loader = request.context.getLoader(collection);\n      const id = get(request, path);\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, path}) {\n    return (request)=> {\n      const loader = request.context.getLoader(collection);\n      const ids = get(request, path);\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return (request)=> {\n      const type = getType(request);\n      return request.info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  addSessionUserId (key) {\n    return ({data, context})=> {\n      return {\n        ...data,\n        [key]: context.user.id\n      };\n    };\n  }\n\n  pass ({obj, info}) {\n    const attr = info.fieldName;\n    return obj[attr];\n  }\n\n  polyRef ({obj, info, context}) {\n    const {fieldName: name} = info;\n    const type = obj[`${name}_type`];\n    const id = obj[`${name}_id`];\n    if (!(type && id)) {\n      return null;\n    }\n    const Loader = context.getLoader(type);\n    return Loader.load(id);\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create');\n  update = this._wrapToCollection('update');\n  delete = this._wrapToCollection('delete')\n\n  get = this.load({\n    collection: this.name,\n    path: 'args.id'\n  });\n\n  _toCollection (method) {\n    return (request)=> {\n      return this.collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const {args = {}} = request;\n\n      let {data} = args;\n      if (this[before]) {\n        data = await this[before]({...request, data});\n      }\n\n      let doc = await this.collection[method]({...args, data});\n      if (this[after]) {\n        const result = await this[after]({...request, data, doc});\n        if (result !== undefined) {\n          doc = result;\n        }\n      }\n\n      return doc;\n    };\n  }\n}\n","import {get, difference} from 'lodash';\n\nimport exposeResolvers from './exposeResolvers';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = exposeResolvers({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n","import Express from 'express';\nimport Cors from 'cors';\n\nimport logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\n\nexport default function createHttpHandler ({Handler, options}) {\n  const app = Express();\n  const cors = Cors(options.cors);\n  app.use(cors);\n\n  options = addInstanceGetters(options.handler);\n\n  logger.debug('Creating HTTP Handler', {\n    name: 'createHttpHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  handler.expose(app);\n\n  return app;\n}\n","import initialize from '../initialize';\n\nexport default class Handler {\n  constructor ({start, ...options}) {\n    this.start = start;\n    initialize.call(this, {namespace: 'Handler', ...options});\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  actions () {\n    throw new Error('Handler should implement actions');\n  }\n\n  expose () {\n    throw new Error('Handler should implement expose');\n  }\n}\n","import Handler from '../Handler';\n\nexport default class HttpHandler extends Handler {\n  expose (app) {\n    let actions = this.actions();\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([route, action])=> {\n        if (!route.includes(' ')) {\n          route = `GET ${route}`;\n        }\n        const [method, path] = route.split(/\\s+/);\n        return {method, path, action};\n      });\n    }\n\n    for (const {method, path, action} of actions) {\n      const fn = method.toLowerCase();\n      app[fn](path, this.handle(action));\n    }\n\n    return app;\n  }\n\n  handle (action) {\n    return async (request, response)=> {\n      await this.start();\n\n      const {params} = request;\n      const logger = this.logger.child({action, params});\n\n      try {\n        logger.info('Calling handler');\n        const method = this[action].bind(this);\n        const data = await method({params, request, response});\n        logger.info('Handler success', {data});\n        return response.json(data);\n      } catch (error) {\n        logger.error('Handler failure', error);\n        return response\n          .status(error.status || 500)\n          .json({error: error.message});\n      }\n    };\n  }\n}\n","import logger from '../../logger';\nimport addInstanceGetters from '../addInstanceGetters';\n\nexport default function createPubSubHandler ({Handler, options}) {\n  options = addInstanceGetters(options.handler);\n\n  logger.debug('Creating PubSub Handler', {\n    name: 'createPubSubHandler',\n    options,\n    Handler\n  });\n  const handler = new Handler(options);\n  return handler.expose();\n}\n","import Handler from '../Handler';\n\nexport default class PubSubHandler extends Handler {\n  expose (topic) {\n    let actions = this.actions(topic);\n    if (!Array.isArray(actions)) {\n      actions = Object.entries(actions).map(([topic, action])=> {\n        return {topic, action};\n      });\n    }\n\n    return actions.map(({topic, action})=> {\n      const handler = this.handle(action);\n      return {topic, handler};\n    });\n  }\n\n  handle (action) {\n    return async (message, context)=> {\n      console.log('calling pubsub start...');\n      await this.start();\n\n      const {json, data, attributes} = message;\n      const logger = this.logger.child({\n        name: 'handle',\n        json,\n        attributes,\n        context\n      });\n\n      try {\n        logger.info('Running handler');\n        const args = {json, data, attributes, context};\n        const response = await action.call(this, args);\n        logger.info('Handler success', response);\n      } catch (error) {\n        logger.error('Handler failure', error);\n      }\n    };\n  }\n}\n"],"names":["GraphQLError","ApolloError","constructor","code","message","params","Function","expected","is","DoesNotExistError","type","id","ids","query","missing","join","NotAuthorizedError","path","logger","Logger","initialize","options","namespace","required","name","Error","default_logger","child","Collection","call","bucket","Admin","storage","collection","create","createAll","datas","mapp","data","findOrCreate","doc","findOne","exists","existsAssert","assert","existsAll","docs","getAll","every","existsAllAssert","get","getAssert","getAllAssert","find","sort","select","limit","length","findIds","map","list","at","after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","lookup","Map","set","toString","id_s","has","loadManyCompact","loadMany","compact","timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","updated_at","singleton","timestampsToDates","Object","keys","reduce","result","k","toDate","FirestoreCollection","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","cursor","invalid","field","parts","Array","isArray","isObject","entries","value","part","op","where","orderBy","start","fn","isNumber","args","batch","commit","omit","getOrAddById","x","user","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","isExisting","context","isSignedIn","user_id","isPublic","instanceGetter","Constructors","getter","msg","Constructor","instance","addInstanceGetters","input","Services","Collections","getService","getCollection","getToken","request","header","prefix","match","replace","contextBuilder","loadSession","getTokenDefault","input_options","req","base_logger","loaders","getLoader","arg","session_id","load_user_error","token","session","error","formatError","GraphQL","originalError","oerror","public_error","exposeResolvers","Controllers","Scalars","resolvers","Controller","controller","expose","makeSchema","Schema","makeExecutableSchema","typeDefs","createGraphqlHandler","server","opts_server","handler","opts_handler","opts_controller","schema","formatErrorDefault","ApolloServer","createHandler","directGraphqlRequest","variables","rlogger","root","response","graphql","errors","directGraphqlRequester","buildContext","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","GraphQLController","_toCollection","_wrapToCollection","load","groups","group","definition","info","isFunction","resolver","authorizer","authorized","resolveType","getType","stub","addSessionUserId","key","pass","attr","fieldName","polyRef","Loader","method","cmethod","before","undefined","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema","createHttpHandler","Handler","Express","cors","Cors","use","actions","HttpHandler","route","action","split","toLowerCase","handle","bind","json","status","createPubSubHandler","PubSubHandler","topic","console","log","attributes"],"mappings":"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"}