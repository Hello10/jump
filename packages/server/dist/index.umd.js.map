{"version":3,"file":"index.umd.js","sources":["../src/Authorizers.js","../src/logger.js","../src/Collection.js","../src/timestampsToDates.js","../src/Errors.js","../src/FirestoreCollection.js","../src/Controller.js","../src/getToken.js","../src/contextBuilder.js","../src/directGraphqlRequest.js","../src/expose.js","../src/makeSchema.js","../src/formatError.js","../src/graphqlHandler.js","../src/processSchema.js"],"sourcesContent":["export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","import Logger from '@hello10/logger';\n\nconst logger = new Logger('jump');\n\nexport default logger;\n","import DataLoader from 'dataloader';\nimport {compact} from 'lodash';\nimport Promise from 'bluebird';\n\nimport base_logger from './logger';\n\nconst logger = base_logger.child('Collection');\n\nexport default class Collection {\n  static get (args) {\n    return new this(args);\n  }\n\n  constructor ({getCollection, getLoader}) {\n    this.getCollection = getCollection;\n    this.getLoader = getLoader;\n  }\n\n  // Leaf child classes MUST overide name getter that the name of the\n  // collection backing this collection\n  // ================================================================\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  // Implementation child classes MUST overide collection getter that\n  // returns a collection instance from the backing database\n  // ================================================================\n  get collection () {\n    throw new Error('Collection child class must implement .collection');\n  }\n\n  // Implementation child classes MUST override unimplemented methods\n  // ================================================================\n  // create    ({data})\n  // exists    ({id, assert = false})\n  // get       ({id, assert = false})\n  // getAll    ({ids, assert = false})\n  // find      ({query, limit, sort, start_at, start_after, select} = {})\n  // update    ({id, data, merge = true, assert = false})\n  // delete    ({id, assert = true})\n  // deleteAll ({ids})\n  //\n  // Child classes MAY override implemented CRUD methods\n  // ================================================================\n  // createAll       ({datas})\n  // findOrCreate    ({query, data})\n  // existsAssert    ({id})\n  // existsAll       ({ids, assert = false})\n  // existsAllAssert ({ids})\n  // getAssert       ({id})\n  // getAllAssert    ({ids})\n  // findOne         ({query, sort, select})\n  // findIds         ({query})\n  // list            ({limit, sort, start_at, start_after} = {})\n  // updateAssert    ({id, data, merge = true})\n  // updateAll       ({ids, data, merge = true, assert = false})\n  // updateAllAssert ({ids, data, merge = true})\n  // updateMany      ({query, data, merge = true})\n  // deleteAssert    ({id})\n  // deleteMany      ({query})\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  create (/* {data} */) {\n    throw new Error('Collection child class must implement .create');\n  }\n\n  createAll ({datas}) {\n    return Promise.map(datas, (data)=> this.create({data}));\n  }\n\n  async findOrCreate ({query, data}) {\n    const doc = await this.findOne({query});\n    return doc || this.create({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  exists (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .exists');\n  }\n\n  existsAssert ({id}) {\n    return this.exists({id, assert: true});\n  }\n\n  async existsAll ({ids, assert = false}) {\n    const docs = await this.getAll({ids, assert});\n    return docs.every((doc)=> !!doc);\n  }\n\n  existsAllAssert ({ids}) {\n    return this.existsAll({ids, assert: true});\n  }\n\n  get (/* {id, assert = false} */) {\n    throw new Error('Collection child class must implement .get');\n  }\n\n  getAssert ({id}) {\n    return this.get({id, assert: true});\n  }\n\n  getAll (/* {ids, assert = false} */) {\n    throw new Error('Collection child class must implement .getAll');\n  }\n\n  getAllAssert ({ids}) {\n    return this.getAll({ids, assert: true});\n  }\n\n  find (/* {query, limit, sort, start_at, start_after, select} = {} */) {\n    throw new Error('Collection child class must implement .find');\n  }\n\n  async findOne ({query, sort, select}) {\n    const docs = await this.find({\n      limit: 1,\n      query,\n      sort,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  async findIds ({query}) {\n    const docs = await this.find({query, select: ['id']});\n    return docs.map(({id})=> id);\n  }\n\n  async list ({limit, sort, start_at, start_after} = {}) {\n    return this.find({limit, sort, start_at, start_after});\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  update (/* {id, data, merge = true, assert = false} */) {\n    throw new Error('Collection child class must implement .update');\n  }\n\n  updateAssert ({id, data, merge = true}) {\n    return this.update({id, data, merge, assert: true});\n  }\n\n  async updateAll ({ids, data, merge = true, assert = false}) {\n    this._addUpdatedAt(data);\n    return Promise.map(ids, (id)=> {\n      return this.update({id, data, merge, assert});\n    });\n  }\n\n  updateAllAssert ({ids, data, merge = true}) {\n    return this.update({ids, data, merge, assert: true});\n  }\n\n  async updateMany ({query, data, merge = true}) {\n    const ids = await this.findIds({query});\n    return this.updateAll({ids, data, merge});\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  delete (/* {id, assert = true} */) {\n    throw new Error('Collection child class must implement .delete');\n  }\n\n  deleteAssert ({id}) {\n    return this.delete({id, assert: true});\n  }\n\n  deleteAll (/* {ids} */) {\n    throw new Error('Collection child class must implement .deleteAll');\n  }\n\n  async deleteMany ({query}) {\n    const ids = await this.findIds({query});\n    return this.deleteAll({ids});\n  }\n\n  /////////////\n  // Loaders //\n  /////////////\n\n  get loader () {\n    return new DataLoader(async (ids)=> {\n      logger.debug({\n        message: `calling DataLoader for ${this.name}`,\n        ids\n      });\n\n      const docs = await this.getAll({ids});\n\n      const lookup = new Map();\n      for (const doc of docs) {\n        lookup.set(doc.id, doc);\n      }\n\n      return ids.map((id)=> {\n        return lookup.has(id) ? lookup.get(id) : null;\n      });\n    });\n  }\n\n  load (id) {\n    if (!id) {\n      throw new Error('Missing id');\n    }\n    const loader = this.getLoader(this.name);\n    return loader.load(id);\n  }\n\n  loadMany (ids) {\n    if (!ids.length) {\n      return [];\n    }\n    const loader = this.getLoader(this.name);\n    return loader.loadMany(ids);\n  }\n\n  async loadManyCompact (ids) {\n    const docs = await this.loadMany(ids);\n    return compact(docs);\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return new Date();\n  }\n\n  _addTimestamps (obj, time) {\n    if (!time) {\n      time = this._timestamp();\n    }\n    this._addCreatedAt(obj, time);\n    this._addUpdatedAt(obj, time);\n    return obj;\n  }\n\n  _addCreatedAt (obj, time) {\n    if (!('created_at' in obj)) {\n      obj.created_at = time || this._timestamp();\n    }\n    return obj;\n  }\n\n  _addUpdatedAt (obj, time) {\n    if (!('updated_at' in obj)) {\n      obj.updated_at = time || this._timestamp();\n    }\n    return obj;\n  }\n}\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  } = {}) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DoesNotExistError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'DoesNotExist',\n      message: ({type, id, ids, query})=> {\n        let missing = '';\n        if (id) {\n          missing = ` for id = ${id}`;\n        } else if (ids) {\n          missing = ` for ids = [${ids.join(',')}]`;\n        } else if (query) {\n          missing = ` for query = ${query}`;\n        }\n        return `Could not find ${type}${missing}`;\n      },\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport Collection from './Collection';\nimport timestampsToDates from './timestampsToDates';\nimport {DoesNotExistError} from './Errors';\n\nexport default class FirestoreCollection extends Collection {\n  constructor (options) {\n    super(options);\n    const {Admin, app} = options;\n    this.Admin = Admin;\n    this.app = app;\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  /////////////////\n  // Core:Create //\n  /////////////////\n\n  async create ({data}) {\n    return this.add({data});\n  }\n\n  ///////////////\n  // Core:Read //\n  ///////////////\n\n  async exists ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    const {exists} = snap;\n    if (assert && !exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const type = this.name();\n      throw new DoesNotExistError({type, id});\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getAll ({ids, assert = false}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    const missing_ids = [];\n    const result = ids.map((id)=> {\n      const exists = (id in docs_by_id);\n      if (!exists) {\n        missing_ids.push(id);\n      }\n      return exists ? docs_by_id[id] : null;\n    });\n\n    if (assert && missing_ids.length) {\n      throw new DoesNotExistError({\n        type: this.name,\n        ids: missing_ids\n      });\n    } else {\n      return result;\n    }\n  }\n\n  async find ({query, limit, sort, start_at, start_after, select} = {}) {\n    let cursor = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (query) {\n      let parts;\n      if (isObject(query)) {\n        parts = Object.entries(query).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(query)) {\n        parts = Array.isArray(query[0]) ? query : [query];\n      } else {\n        invalid('query');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('query');\n        }\n        const [field, op, value] = part;\n        cursor = cursor.where(field, op, value);\n      }\n    }\n\n    if (sort) {\n      if (!Array.isArray(sort)) {\n        sort = [sort];\n      }\n      cursor = cursor.orderBy(...sort);\n    }\n\n    const start = start_after || start_at;\n    if (start) {\n      const doc = await this.doc(start).get();\n      const fn = start_after ? 'startAfter' : 'startAt';\n      cursor = cursor[fn](doc);\n    }\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      cursor = cursor.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      cursor = cursor.select(...select);\n    }\n\n    const snap = await cursor.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  /////////////////\n  // Core:Update //\n  /////////////////\n\n  async update (args) {\n    return this.set(args);\n  }\n\n  /////////////////\n  // Core:Delete //\n  /////////////////\n\n  async delete ({id, assert = true}) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    const ref = this.doc(id);\n    return ref.delete();\n  }\n\n  deleteAll ({ids}) {\n    const batch = this.Admin.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  ///////////////\n  // Auxiliary //\n  ///////////////\n\n  async add ({data}) {\n    data = omit(data, 'id');\n    this._addTimestamps(data);\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add(data);\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        query: [field, '==', value]\n      });\n    };\n  }\n\n  async set ({\n    id,\n    data,\n    merge = true,\n    assert = false,\n    get = true\n  }) {\n    if (assert) {\n      await this.existsAssert({id});\n    }\n    data = omit(data, 'id');\n    this._addUpdatedAt(data);\n    const ref = this.doc(id);\n    const set = await ref.set(data, {merge});\n    return get ? this.get({id}) : set;\n  }\n\n  async addOrSetByField ({\n    field,\n    data,\n    add = (x)=> x\n  }) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestamp () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","import {isFunction} from 'lodash';\n\nimport base_logger from './logger';\n\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from './Errors';\n\n// to: helpers\nfunction capitalize (str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class Controller {\n  constructor (options = {}) {\n    this.options = options;\n    this.logger = base_logger.child('Controller');\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  static resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection ({context, name}) {\n    return context.getCollection(name || this.name);\n  }\n\n  loader ({context, name}) {\n    return context.getLoader(name || this.name);\n  }\n\n  expose () {\n    const {logger} = this;\n\n    const result = {};\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        // This seems like a dumb idea unless there's some dynmamic thing that\n        // is difficult to do without this..\n        // let the resolvers and permission be specified as strings\n        // for (const [k, v] of Object.entries(config)) {\n        //   if (Type(v, String)) {\n        //     config[k] = this[v];\n        //   }\n        // }\n\n        for (const field of ['authorizer', 'resolver']) {\n          if (!isFunction(definition[field])) {\n            throw new Error(`Invalid ${field} definition for ${path}`);\n          }\n        }\n\n        const {resolver, authorizer} = definition;\n        result[type][name] = async (obj, args, context, info)=> {\n          const {user} = context;\n          const params = {obj, args, context, info, user};\n\n          const rlogger = logger.child({\n            resolver: name,\n            type,\n            user\n          });\n\n          rlogger.debug(`Calling resolver ${path}`);\n\n          try {\n            // Have to handle this explicitly, would be better to have\n            // this in context build derp meh\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              const error = new NotAuthorizedError({path});\n              rlogger.error(error);\n              throw error;\n            }\n\n            rlogger.info('Calling resolver', {obj, args});\n            return resolver.call(this, params);\n          } catch (error) {\n            if (error.expected) {\n              rlogger.error('Expected GraphQL error', error);\n              throw error;\n            } else {\n              rlogger.error('Unexpected GraphQL error', error);\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  exists = this._toCollection('exists');\n  get    = this._toCollection('get');\n  list   = this._toCollection('list');\n  create = this._wrapToCollection('create')\n  update = this._wrapToCollection('update');\n\n  async delete (request) {\n    if (this.beforeDelete) {\n      await this.beforeDelete(request);\n    }\n\n    const {id} = request.args;\n    const collection = this.collection(request);\n    const deleted = await collection.delete({id});\n    const deleted_at = new Date();\n\n    if (this.afterDelete) {\n      await this.afterDelete({...request, deleted, deleted_at});\n    }\n\n    return {deleted_at, deleted};\n  }\n\n  _toCollection (method) {\n    return (request)=> {\n      const collection = this.collection(request);\n      return collection[method](request.args);\n    };\n  }\n\n  _wrapToCollection (method) {\n    const cmethod = capitalize(method);\n    const before = `before${cmethod}`;\n    const after = `after${cmethod}`;\n\n    return async (request)=> {\n      const collection = this.collection(request);\n\n      let {data} = request.args;\n      if (this[before]) {\n        data = await this[before](request);\n      }\n\n      let doc = await collection[method]({data});\n      if (this[after]) {\n        doc = await this[after]({...request, data, doc});\n      }\n\n      return doc;\n    };\n  }\n}\n","export default function getToken (request) {\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n","import base_logger from './logger';\nimport getTokenDefault from './getToken';\n\nexport default function contextBuilder ({\n  Collections,\n  loadSession,\n  options,\n  getToken = getTokenDefault,\n  onLoad = ()=> {}\n}) {\n  let loaded = false;\n  return async ({req})=> {\n    // TODO: support serializers in logger\n    const logger = base_logger.child({\n      name: 'contextBuilder',\n      req: {\n        url: req.url,\n        method: req.method,\n        protocol: req.protocol,\n        requestId: req.requestId,\n        ip: req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        headers: req.headers\n      }\n    });\n\n    if (!loaded) {\n      logger.debug('calling onLoad');\n      await onLoad();\n      loaded = true;\n    }\n\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    function getCollection (arg) {\n      const name = arg.name || arg;\n      const Collection = Collections[name];\n      if (!Collection) {\n        const msg = `Collection with name ${name} does not exist`;\n        logger.error(msg);\n        throw new Error(msg);\n      }\n\n      return Collection.get({\n        getCollection,\n        getLoader,\n        ...options\n      });\n    }\n\n    let session_id = null;\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    const token = getToken(req);\n    if (token) {\n      try {\n        ({session_id, user_id, user} = await loadSession({token, getCollection}));\n        logger.debug('Loaded session', {session_id, user});\n      } catch (error) {\n        logger.error('Error loading session', error);\n        load_user_error = error;\n      }\n    }\n\n    return {\n      getCollection,\n      getLoader,\n      session_id,\n      user_id,\n      user,\n      load_user_error,\n      ...options\n    };\n  };\n}\n","import {graphql} from 'graphql';\n\nimport logger from './logger';\n\n// https://graphql.org/graphql-js/graphql/#graphql\n// graphql(\n//   schema: GraphQLSchema,\n//   requestString: string,\n//   rootValue?: ?any,\n//   contextValue?: ?any,\n//   variableValues?: ?{[key: string]: any},\n//   operationName?: ?string\n// ): Promise<GraphQLResult>\n\nexport default async function directGraphqlRequest ({Schema, context, query, variables}) {\n  const rlogger = logger.child({\n    name: 'localGraphqlRequest',\n    query,\n    variables\n  });\n  rlogger.debug('Making request');\n\n  const root = {};\n  const response = await graphql(Schema, query, root, context, variables);\n  const {data, errors} = response;\n\n  if (errors) {\n    const error = errors[0];\n    rlogger.error(error);\n    throw error;\n  } else {\n    rlogger.debug('Got response', {data});\n    return data;\n  }\n}\n","import {merge} from 'lodash';\n\nimport logger from './logger';\n\nexport default function expose ({Controllers, Scalars, options}) {\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    logger.debug(`Exposing controller ${name}`);\n    const controller = new Controller(options);\n    // TODO: shouldn't need to instantiate each controller per request,\n    // just figure out the dispatch and then instantiate on demand unless\n    // there's some memoization that can be done between requests.\n    // that way context also becomes part of this instead of only request var\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n  return resolvers;\n}\n","import {makeExecutableSchema} from 'graphql-tools';\n\nimport expose from './expose';\n\nexport default function makeSchema ({Schema, Controllers, Scalars, options}) {\n  const resolvers = expose({Controllers, Scalars, options});\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","import * as GraphQL from 'graphql';\n\nimport logger from './logger';\nimport {GraphQLError} from './Errors';\n\nexport default function formatError (error) {\n  logger.error(error);\n\n  let data = GraphQL.formatError(error);\n\n  const {originalError: oerror} = error;\n  if (oerror && oerror.expected) {\n    data.code = oerror.code;\n  } else {\n    // Handle context creation errors don't include original\n    // const missing = error.message.match(/Missing session user ([^\\s]{24})/);\n    // let public_error;\n    // if (missing) {\n    //   const id = missing[1];\n    //   public_error = new Errors.SessionUserMissing({id});\n    // } else {\n    //   public_error = new Errors.Public();\n    // }\n    const public_error = new GraphQLError();\n    data = GraphQL.formatError(public_error);\n    data.code = public_error.code;\n  }\n\n  return data;\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport makeSchema from './makeSchema';\nimport formatErrorDefault from './formatError';\n\nexport default function graphqlHandler ({\n  Controllers,\n  Scalars,\n  Schema,\n  options = {}\n}) {\n  const {\n    server: opts_server = {},\n    handler: opts_handler = {},\n    controller: opts_controller = {}\n  } = options;\n\n  if (!opts_server.formatError) {\n    opts_server.formatError = formatErrorDefault;\n  }\n\n  const schema = makeSchema({\n    options: opts_controller,\n    Schema,\n    Controllers,\n    Scalars\n  });\n\n  const server = new ApolloServer({...opts_server, schema});\n  return server.createHandler(opts_handler);\n}\n","import {get, difference} from 'lodash';\n\nimport expose from './expose';\n\n// We group definitions by their kind and also build up some enums that\n// can be written to the shared package so we can use those instead of\n// magic strings in the applications\nfunction processDefinitions (definitions) {\n  const enums = {};\n  const groups = {\n    Query: [],\n    Mutation: [],\n    Type: []\n  };\n\n  for (const definition of definitions) {\n    const {kind} = definition;\n    const name = get(definition, 'name.value');\n    if (!name) {\n      continue;\n    }\n\n    switch (kind) {\n      case 'ScalarTypeDefinition':\n      case 'InterfaceTypeDefinition':\n      case 'UnionTypeDefinition':\n        groups.Type.push(name);\n        break;\n\n      case 'EnumTypeDefinition': {\n        const {values} = definition;\n        enums[name] = values.reduce((result, value_definition)=> {\n          const {value} = value_definition.name;\n          result[value] = value;\n          return result;\n        }, {});\n        break;\n      }\n\n      case 'ObjectTypeDefinition': {\n        const is_query_or_mutation = ['Query', 'Mutation'].includes(name);\n        if (is_query_or_mutation) {\n          const {fields} = definition;\n          for (const field of fields) {\n            const {value} = field.name;\n            groups[name].push(value);\n          }\n        } else {\n          groups.Type.push(name);\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return {enums, groups};\n}\n\n// TODO: handle checking resolved type fields as well by using @ref directive\nfunction checkSchema ({groups: schema_groups, resolvers}) {\n  const resolver_groups = Object.entries(resolvers).reduce((names, [k, v])=> {\n    if (k in names) {\n      names[k] = Object.keys(v);\n    } else {\n      names.Type.push(k);\n    }\n    return names;\n  }, {\n    Type: [],\n    Query: null,\n    Mutation: null\n  });\n\n  return Object.entries(schema_groups).reduce((errors, [kind, schema_names])=> {\n    const resolver_names = resolver_groups[kind];\n    const differences = {\n      resolver: difference(schema_names, resolver_names),\n      schema: difference(resolver_names, schema_names)\n    };\n\n    return Object.entries(differences).reduce((errors, [source, diff])=> {\n      const new_errors = diff.map((name)=>\n        `Missing ${source} for ${name}`\n      );\n      return [...errors, ...new_errors];\n    }, errors);\n  }, []);\n}\n\nexport default function processSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = expose({Controllers, Scalars});\n  const {definitions} = Schema;\n  const {enums, groups} = processDefinitions(definitions);\n  const errors = checkSchema({resolvers, groups});\n  return {enums, groups, errors};\n}\n"],"names":["isExisting","context","user","isSignedIn","user_id","isPublic","logger","Logger","base_logger","child","Collection","get","args","constructor","getCollection","getLoader","name","Error","collection","create","createAll","datas","Promise","map","data","findOrCreate","query","findOne","doc","exists","existsAssert","id","assert","existsAll","ids","getAll","docs","every","existsAllAssert","getAssert","getAllAssert","find","sort","select","limit","length","findIds","list","start_at","start_after","update","updateAssert","merge","updateAll","_addUpdatedAt","updateAllAssert","updateMany","delete","deleteAssert","deleteAll","deleteMany","loader","DataLoader","debug","message","lookup","Map","set","has","load","loadMany","loadManyCompact","compact","_timestamp","Date","_addTimestamps","obj","time","_addCreatedAt","created_at","updated_at","timestampsToDates","type","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","params","Function","expected","is","DoesNotExistError","missing","join","NotAuthorizedError","path","FirestoreCollection","options","Admin","app","auth","firestore","add","ref","snap","_snapToDoc","uniques","uniq","refs","snaps","docs_by_id","missing_ids","push","isNumber","invalid","cursor","Array","isArray","field","parts","isObject","entries","value","part","op","where","orderBy","start","fn","batch","commit","omit","getOrAddById","x","findOneByField","addOrSetByField","FieldValue","serverTimestamp","_deleteField","_id","body","recover","e","then","capitalize","str","toUpperCase","slice","APOLLO_UNION_RESOLVER_NAME","Controller","_toCollection","_wrapToCollection","resolvers","expose","groups","group","definition","info","call","isFunction","resolver","authorizer","rlogger","load_user_error","authorized","error","resolveType","getType","schema","stub","request","deleted","deleted_at","afterDelete","beforeDelete","method","cmethod","before","after","getToken","header","prefix","match","replace","contextBuilder","Collections","loadSession","getTokenDefault","onLoad","loaded","req","session_id","arg","loaders","msg","token","url","protocol","requestId","ip","headers","connection","remoteAddress","directGraphqlRequest","Schema","variables","root","graphql","response","errors","Controllers","Scalars","controller","makeSchema","makeExecutableSchema","typeDefs","formatError","GraphQL","originalError","oerror","public_error","graphqlHandler","server","opts_server","handler","opts_handler","opts_controller","formatErrorDefault","ApolloServer","createHandler","processDefinitions","definitions","enums","Query","Mutation","Type","kind","values","value_definition","is_query_or_mutation","includes","fields","checkSchema","schema_groups","resolver_groups","names","v","schema_names","resolver_names","differences","difference","source","diff","new_errors","processSchema"],"mappings":"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"}