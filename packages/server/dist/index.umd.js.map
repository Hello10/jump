{"version":3,"file":"index.umd.js","sources":["../src/Authorizers.js","../src/timestampsToDates.js","../src/Errors.js","../src/Collection.js","../src/Logger.js","../src/Controller.js","../src/makeSchema.js","../src/contextBuilder.js","../src/graphqlHandler.js"],"sourcesContent":["export function isExisting ({context}) {\n  return !!context.user;\n}\n\nexport function isSignedIn ({context}) {\n  return !!context.user_id;\n}\n\nexport function isPublic () {\n  return true;\n}\n","export default function timestampsToDates (obj) {\n  if (!obj) {\n    return obj;\n  }\n  const type = obj.constructor.name;\n  switch (type) {\n    case 'Array':\n      return obj.map(timestampsToDates);\n    case 'Object':\n      return Object.keys(obj).reduce((result, k)=> {\n        result[k] = timestampsToDates(obj[k]);\n        return result;\n      }, {});\n    case 'Timestamp':\n      return obj.toDate();\n    default:\n      return obj;\n  }\n}\n","import {ApolloError} from 'apollo-server-cloud-functions';\n\nexport class GraphQLError extends ApolloError {\n  constructor ({\n    code = 'GraphQLError',\n    message = 'GraphQL error',\n    params\n  }) {\n    if (message.constructor === Function) {\n      message = message(params);\n    }\n    super(message, code, params);\n    this.expected = true;\n  }\n\n  is (code) {\n    return (this.code === code);\n  }\n}\n\nexport class DocumentDoesNotExistError extends GraphQLError {\n  constructor (params) {\n    const {type, id} = params;\n    super({\n      code: 'DocumentDoesNotExist',\n      message: `Document ${type} with id ${id} does not exist`,\n      params\n    });\n  }\n}\n\nexport class SessionUserNotFoundError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'SessionUserNotFound',\n      message: `Session user not found: ${params.id}`,\n      params\n    });\n  }\n}\n\nexport class NotAuthorizedError extends GraphQLError {\n  constructor (params) {\n    super({\n      code: 'NotAuthorized',\n      message: `Not authorized to access ${params.path}`,\n      params\n    });\n  }\n}\n","import DataLoader from 'dataloader';\nimport {omit, uniq, isNumber, isObject} from 'lodash';\n\nimport timestampsToDates from './timestampsToDates';\nimport {DocumentDoesNotExistError} from './Errors';\n\nexport default class Collection {\n  static get (args) {\n    return new this(args);\n  }\n\n  constructor ({Admin, app, getCollection, getLoader}) {\n    this.Admin = Admin;\n    this.app = app;\n    this.getCollection = getCollection;\n    this.getLoader = getLoader;\n  }\n\n  get name () {\n    throw new Error('Collection child class must implement .name');\n  }\n\n  get auth () {\n    return this.app.auth();\n  }\n\n  get collection () {\n    return this.app.firestore().collection(this.name);\n  }\n\n  doc (id) {\n    return this.collection.doc(id);\n  }\n\n  get loader () {\n    return new DataLoader((ids)=> {\n      return this.getMany({ids});\n    });\n  }\n\n  //////////\n  // CRUD //\n  //////////\n  async add ({data}) {\n    data = omit(data, 'id');\n    const timestamp = this._timestampField();\n    data.created_at = timestamp;\n    data.updated_at = timestamp;\n    const ref = await this.collection.add(data);\n    data.id = ref.id;\n    return data;\n  }\n\n  async set ({id, data, merge = true}) {\n    data = omit(data, 'id');\n    data.updated_at = this._timestampField();\n    const ref = this.doc(id);\n    await ref.set(data, {merge});\n    return this.get({id});\n  }\n\n  async addOrSetByField ({field, data, add = (x)=> x}) {\n    const value = data[field];\n    const doc = await this.findOneByField(field)(value);\n    if (doc) {\n      const {id} = doc;\n      return this.set({id, data});\n    } else {\n      data = await add(data);\n      return this.add({data});\n    }\n  }\n\n  async getOrAddById ({id, data, add = (x)=> x}) {\n    let user = await this.get({id});\n    if (!user) {\n      data = await add({id, data});\n      user = await this.set({id, data, merge: false});\n    }\n    return user;\n  }\n\n  async exists (id) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    return snap.exists;\n  }\n\n  async get ({id, assert = false}) {\n    const ref = this.doc(id);\n    const snap = await ref.get();\n    if (assert && !snap.exists) {\n      const error = this._doesNotExistError(id);\n      throw error;\n    }\n    return this._snapToDoc(snap);\n  }\n\n  async getMany ({ids}) {\n    if (!ids || ids.length === 0) {\n      return [];\n    }\n\n    const uniques = uniq(ids);\n    const refs = uniques.map((id)=> this.doc(id));\n    const snaps = await this.firestore.getAll(refs);\n    const docs = snaps.map((snap)=> this._snapToDoc(snap));\n\n    const docs_by_id = {};\n    for (const doc of docs) {\n      if (doc) {\n        docs_by_id[doc.id] = doc;\n      }\n    }\n\n    return ids.map((id)=> {\n      return (id in docs_by_id) ? docs_by_id[id] : null;\n    });\n  }\n\n  async find ({where, limit, order_by, select} = {}) {\n    let query = this.collection;\n\n    function invalid (field) {\n      throw new Error(`Invalid ${field} for find`);\n    }\n\n    if (where) {\n      let parts;\n      if (isObject(where)) {\n        parts = Object.entries(where).map(([field, value])=> {\n          return [field, '==', value];\n        });\n      } else if (Array.isArray(where)) {\n        parts = Array.isArray(where[0]) ? where : [where];\n      } else {\n        invalid('where');\n      }\n\n      for (const part of parts) {\n        if (part.length !== 3) {\n          invalid('where');\n        }\n        const [field, op, value] = part;\n        query = query.where(field, op, value);\n      }\n    }\n\n    if (order_by) {\n      if (!Array.isArray(order_by)) {\n        order_by = [order_by];\n      }\n      query = query.orderBy(...order_by);\n    }\n\n\n    if (limit) {\n      if (!isNumber(limit)) {\n        invalid('limit');\n      }\n      query = query.limit(limit);\n    }\n\n    if (select) {\n      if (!Array.isArray(select)) {\n        invalid('select');\n      }\n      query = query.select(...select);\n    }\n\n    const snap = await query.get();\n    return snap.docs.map(this._snapToDoc);\n  }\n\n  async findOne ({where, order_by, select}) {\n    const docs = await this.find({\n      limit: 1,\n      where,\n      order_by,\n      select\n    });\n    return (docs.length > 0) ? docs[0] : null;\n  }\n\n  findOneByField (field) {\n    return (value)=> {\n      return this.findOne({\n        where: [field, '==', value]\n      });\n    };\n  }\n\n  async delete ({id, ids, where}) {\n    if (id) {\n      const ref = this.doc(id);\n      return ref.delete();\n    }\n\n    if (ids && where) {\n      throw new Error('Delete call should pass ids or where not both');\n    }\n\n    if (where) {\n      const docs = await this.find({where});\n      ids = docs.map(({id})=> id);\n    }\n\n    if (ids.length === 0) {\n      return Promise.resolve();\n    }\n\n    const batch = this.firestore.batch();\n    for (const id of ids) {\n      const ref = this.doc(id);\n      batch.delete(ref);\n    }\n    return batch.commit();\n  }\n\n  /////////////\n  // Helpers //\n  /////////////\n\n  _timestampField () {\n    return this.Admin.firestore.FieldValue.serverTimestamp();\n  }\n\n  _deleteField () {\n    return this.Admin.firestore.FieldValue.delete();\n  }\n\n  _snapToDoc (snap) {\n    if (snap.exists) {\n      const data = snap.data();\n      data.id = snap.id;\n      return timestampsToDates(data);\n    } else {\n      return null;\n    }\n  }\n\n  _doesNotExistError (id) {\n    const type = this.name();\n    return new DocumentDoesNotExistError({type, id});\n  }\n\n  _id () {\n    const ref = this.collection.doc();\n    return ref.id;\n  }\n}\n","export default class Logger {\n  child () {\n    return this;\n  }\n}\n\nconst levels = ['trace', 'debug', 'info', 'warn', 'error', 'fatal'];\nfor (const level of levels) {\n  Logger.prototype[level] = function log (...args) {\n    const {console} = global;\n    const log = (level in console) ? console[level] : console.log;\n    return log.call(console, ...args);\n  };\n}\n","import {isFunction} from 'lodash';\nimport Logger from './Logger';\nimport {\n  GraphQLError,\n  NotAuthorizedError\n} from './Errors';\n\nconst APOLLO_UNION_RESOLVER_NAME = '__resolveType';\n\nexport default class Controller {\n  constructor ({logger} = {}) {\n    if (!logger) {\n      logger = new Logger();\n    }\n    this.logger = logger;\n  }\n\n  get name () {\n    throw new Error('Child class must implement .name');\n  }\n\n  resolvers () {\n    // Child class should implement this method and return\n    // an object with this shape:\n    //\n    // {\n    //   // Mutations resolved in this controller\n    //   Mutation: {\n    //     <MutationName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Queries resolved in this controller\n    //   Query: {\n    //     <QueryName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   // Type fields resolved in this controller\n    //   <TypeName>: {\n    //     <FieldName>: {\n    //       resolver: Function,\n    //       authorizer: Function\n    //     }\n    //   },\n    //   <UnionTypeName>: {\n    //     __resolveType: Function\n    //   }\n    // }\n    throw new Error('Child class must implement .resolvers');\n  }\n\n  collection ({context, name}) {\n    return context.getCollection(name || this.name);\n  }\n\n  loader ({context, name}) {\n    return context.getLoader(name || this.name);\n  }\n\n  expose () {\n    const result = {};\n    const {logger} = this;\n\n    const groups = this.resolvers();\n    for (const [type, group] of Object.entries(groups)) {\n      if (!(type in result)) {\n        result[type] = {};\n      }\n\n      for (const [name, definition] of Object.entries(group)) {\n        const path = `${type}.${name}`;\n\n        // Resolve Union types\n        // https://www.apollographql.com/docs/graphql-tools/resolvers/#unions-and-interfaces\n        if (name === APOLLO_UNION_RESOLVER_NAME) {\n          result[type][name] = (obj, context, info)=> {\n            return definition.call(this, {obj, context, info});\n          };\n          continue;\n        }\n\n        const {resolver, authorizer} = definition;\n\n        const valid = [resolver, authorizer].every(isFunction);\n        if (!valid) {\n          throw new Error(`Invalid resolver definition for ${path}`);\n        }\n\n        result[type][name] = async (obj, args, context, info)=> {\n          logger.debug(`Calling resolver ${path}`);\n\n          try {\n            const params = {obj, args, context, info};\n\n            const {load_user_error} = context;\n            if (load_user_error) {\n              throw load_user_error;\n            }\n\n            const authorized = await authorizer.call(this, params);\n            if (!authorized) {\n              throw new NotAuthorizedError({path});\n            }\n\n            return resolver.call(this, params);\n          } catch (error) {\n            if (error.expected) {\n              logger.error(error, 'Expected GraphQL error');\n              throw error;\n            } else {\n              logger.error(error, 'Unexpected GraphQL error');\n              throw new GraphQLError();\n            }\n          }\n        };\n      }\n    }\n    return result;\n  }\n\n\n  ///////////////////////\n  // Generic Resolvers //\n  ///////////////////////\n\n  get (request) {\n    const collection = this.collection(request);\n    return collection.get(request.args);\n  }\n\n  list (request) {\n    const collection = this.collection(request);\n    return collection.list(request.args);\n  }\n\n  create (request) {\n    const collection = this.collection(request);\n    const {data} = request.args;\n    return collection.add(data);\n  }\n\n  update (request) {\n    const collection = this.collection(request);\n    const {id, data} = request.args;\n    return collection.set({id, data});\n  }\n\n  delete (request) {\n    const collection = this.collection(request);\n    const {id} = request.args;\n    return collection.delete({id});\n  }\n\n  load ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const id = obj[field];\n      return id ? loader.load(id) : null;\n    };\n  }\n\n  loadMany ({collection, field}) {\n    return ({obj, context})=> {\n      const loader = context.getLoader(collection);\n      const ids = obj[field];\n      return ids.length ? loader.loadMany(ids) : [];\n    };\n  }\n\n  resolveType (getType) {\n    return ({obj, info})=> {\n      const type = getType(obj);\n      return info.schema.getType(type);\n    };\n  }\n\n  stub () {\n    throw new Error('Unimplemented stub');\n  }\n}\n","import {makeExecutableSchema} from 'graphql-tools';\nimport {merge} from 'lodash';\n\nexport default function makeSchema ({Schema, Controllers, Scalars}) {\n  const resolvers = {};\n  for (const [name, Controller] of Object.entries(Controllers)) {\n    console.log(`Exposing controller ${name}`);\n    const controller = new Controller();\n    merge(resolvers, controller.expose());\n  }\n  merge(resolvers, Scalars);\n\n  return makeExecutableSchema({\n    typeDefs: Schema,\n    resolvers\n  });\n}\n","export default function contextBuilder ({Admin, app, Collections, getToken, loadUserFromToken}) {\n  return async ({req})=> {\n    const loaders = {};\n    function getLoader (arg) {\n      const name = arg.name || arg;\n      if (!(name in loaders)) {\n        const collection = getCollection(name);\n        loaders[name] = collection.loader;\n      }\n      return loaders[name];\n    }\n\n    function getCollection (arg) {\n      const name = arg.name || arg;\n      const Collection = Collections[name];\n      if (!Collection) {\n        throw new Error(`Collection with name ${name} does not exist`);\n      }\n\n      return Collection.get({\n        Admin,\n        app,\n        getCollection,\n        getLoader\n      });\n    }\n\n    let user_id = null;\n    let user = null;\n    let load_user_error = null;\n\n    const token = getToken(req);\n    if (token) {\n      try {\n        ({user_id, user} = await loadUserFromToken({token, getCollection}));\n      } catch (error) {\n        load_user_error = error;\n      }\n    }\n\n    return {\n      Admin,\n      app,\n      getCollection,\n      getLoader,\n      token,\n      user_id,\n      user,\n      load_user_error\n    };\n  };\n}\n","import {ApolloServer} from 'apollo-server-cloud-functions';\n\nimport makeSchema from './makeSchema';\nimport contextBuilder from './contextBuilder';\n\nfunction getTokenDefault (request) {\n  const header = request.get('Authorization');\n  const prefix = /^Bearer /;\n  if (header && header.match(prefix)) {\n    return header.replace(prefix, '');\n  } else {\n    return null;\n  }\n}\n\nexport default function graphqlHandler ({\n  Admin,\n  app,\n  buildContext,\n  Collections,\n  Controllers,\n  getToken = getTokenDefault,\n  loadUserFromToken,\n  options = {},\n  Scalars,\n  Schema\n}) {\n  if (!buildContext) {\n    buildContext = contextBuilder({Admin, app, Collections, getToken, loadUserFromToken});\n  }\n  const schema = makeSchema({Schema, Controllers, Scalars});\n  const server = new ApolloServer({schema, context: buildContext});\n  return server.createHandler(options);\n}\n"],"names":["isExisting","context","user","isSignedIn","user_id","isPublic","timestampsToDates","obj","type","constructor","name","map","Object","keys","reduce","result","k","toDate","GraphQLError","ApolloError","code","message","params","Function","expected","is","DocumentDoesNotExistError","id","NotAuthorizedError","path","Collection","get","args","Admin","app","getCollection","getLoader","Error","auth","collection","firestore","doc","loader","DataLoader","ids","getMany","add","data","omit","timestamp","_timestampField","created_at","updated_at","ref","set","merge","addOrSetByField","field","x","value","findOneByField","getOrAddById","exists","snap","assert","error","_doesNotExistError","_snapToDoc","length","uniques","uniq","refs","getAll","snaps","docs","docs_by_id","find","where","limit","order_by","select","invalid","query","parts","isObject","entries","Array","isArray","part","op","orderBy","isNumber","findOne","delete","Promise","resolve","batch","commit","FieldValue","serverTimestamp","_deleteField","_id","Logger","child","levels","level","prototype","log","console","global","call","_catch","body","recover","e","then","APOLLO_UNION_RESOLVER_NAME","Controller","logger","resolvers","expose","groups","group","definition","info","resolver","authorizer","valid","every","isFunction","debug","load_user_error","authorized","request","list","create","update","load","loadMany","resolveType","getType","schema","stub","makeSchema","Schema","Controllers","Scalars","controller","makeExecutableSchema","typeDefs","contextBuilder","Collections","getToken","loadUserFromToken","req","token","arg","loaders","getTokenDefault","header","prefix","match","replace","graphqlHandler","buildContext","options","server","ApolloServer","createHandler"],"mappings":"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"}