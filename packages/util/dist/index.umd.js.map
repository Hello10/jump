{"version":3,"file":"index.umd.js","sources":["../src/camelCaseKeys.js","../src/compact.js","../src/determineAddressType.js","../src/isValidEmail.js","../src/omitTypename.js","../src/readableCode.js","../src/setwiseEqual.js","../src/username.js"],"sourcesContent":["import {mapKeys, camelCase} from 'lodash';\n\nexport default function camelCaseKeys (obj) {\n  return mapKeys(obj, (v, k)=> camelCase(k));\n}\n","import Type from 'type-of-is';\nimport {\n  compact,\n  identity,\n  pickBy\n} from 'lodash';\n\nexport default function compact_ (obj) {\n  const type = Type(obj);\n  switch (type) {\n    case Array:\n      return compact(obj);\n    case Object:\n      return pickBy(obj, identity);\n    case String:\n      return obj.replace(/\\s+/g, '');\n    default:\n      throw new Error(`compact does not support type ${type}`);\n  }\n}\n","import emailRegex from 'email-regex';\nimport phoneRegex from 'phone-regex';\n\nexport default function determineAddressType (address) {\n  const email = emailRegex({exact: true});\n  if (email.test(address)) {\n    return 'email';\n  }\n\n  const phone = phoneRegex({exact: true});\n  if (phone.test(address)) {\n    return 'phone';\n  }\n\n  return null;\n}\n","import emailRegex from 'email-regex';\n\nexport default function isValidEmail (email) {\n  const regex = emailRegex({exact: true});\n  return regex.test(email);\n}\n","import {omit} from 'lodash';\n\nexport default function omitTypename (obj) {\n  return obj ? omit(obj, '__typename') : obj;\n}\n","import {times} from 'lodash';\nimport {randomInt} from '@hello10/util';\n\n// No 'O' or '0'\nconst chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'.split('');\n\nfunction randomReadableChar () {\n  const index = randomInt(chars.length - 1);\n  return chars[index];\n}\n\nexport default function readableCode (len) {\n  return times(len, randomReadableChar).join('');\n}\n","import {\n  isEqual,\n  sortBy\n} from 'lodash';\n\nexport default function setwiseEqual (array1, array2) {\n  return isEqual(sortBy(array1), sortBy(array2));\n}\n","import readableCode from './readableCode';\n\nconst suffix_length = 16;\nconst prefix = 'person';\n\nconst regex = new RegExp(`^${prefix}\\\\.[A-Za-z0-9]{${suffix_length}}$`);\n\nexport function generateUsername () {\n  const suffix = readableCode(suffix_length);\n  return `${prefix}.${suffix}`;\n}\n\nexport function isGeneratedUsername (username) {\n  return username.match(regex);\n}\n"],"names":["camelCaseKeys","obj","mapKeys","v","k","camelCase","compact_","type","Type","Array","compact","Object","pickBy","identity","String","replace","Error","determineAddressType","address","email","emailRegex","exact","test","phone","phoneRegex","isValidEmail","regex","omitTypename","omit","chars","split","randomReadableChar","index","randomInt","length","readableCode","len","times","join","setwiseEqual","array1","array2","isEqual","sortBy","suffix_length","prefix","RegExp","generateUsername","suffix","isGeneratedUsername","username","match"],"mappings":";;;;;;;;;EAEe,SAASA,aAAT,CAAwBC,GAAxB,EAA6B;EAC1C,SAAOC,cAAO,CAACD,GAAD,EAAM,CAACE,CAAD,EAAIC,CAAJ,KAASC,gBAAS,CAACD,CAAD,CAAxB,CAAd;EACD;;ECGc,SAASE,QAAT,CAAmBL,GAAnB,EAAwB;EACrC,QAAMM,IAAI,GAAGC,IAAI,CAACP,GAAD,CAAjB;;EACA,UAAQM,IAAR;EACE,SAAKE,KAAL;EACE,aAAOC,cAAO,CAACT,GAAD,CAAd;;EACF,SAAKU,MAAL;EACE,aAAOC,aAAM,CAACX,GAAD,EAAMY,eAAN,CAAb;;EACF,SAAKC,MAAL;EACE,aAAOb,GAAG,CAACc,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAP;;EACF;EACE,YAAM,IAAIC,KAAJ,CAAW,iCAAgCT,IAAK,EAAhD,CAAN;EARJ;EAUD;;EChBc,SAASU,oBAAT,CAA+BC,OAA/B,EAAwC;EACrD,QAAMC,KAAK,GAAGC,UAAU,CAAC;EAACC,IAAAA,KAAK,EAAE;EAAR,GAAD,CAAxB;;EACA,MAAIF,KAAK,CAACG,IAAN,CAAWJ,OAAX,CAAJ,EAAyB;EACvB,WAAO,OAAP;EACD;;EAED,QAAMK,KAAK,GAAGC,UAAU,CAAC;EAACH,IAAAA,KAAK,EAAE;EAAR,GAAD,CAAxB;;EACA,MAAIE,KAAK,CAACD,IAAN,CAAWJ,OAAX,CAAJ,EAAyB;EACvB,WAAO,OAAP;EACD;;EAED,SAAO,IAAP;EACD;;ECbc,SAASO,YAAT,CAAuBN,KAAvB,EAA8B;EAC3C,QAAMO,KAAK,GAAGN,UAAU,CAAC;EAACC,IAAAA,KAAK,EAAE;EAAR,GAAD,CAAxB;EACA,SAAOK,KAAK,CAACJ,IAAN,CAAWH,KAAX,CAAP;EACD;;ECHc,SAASQ,YAAT,CAAuB1B,GAAvB,EAA4B;EACzC,SAAOA,GAAG,GAAG2B,WAAI,CAAC3B,GAAD,EAAM,YAAN,CAAP,GAA6BA,GAAvC;EACD;;ECAD,MAAM4B,KAAK,GAAG,qCAAqCC,KAArC,CAA2C,EAA3C,CAAd;;EAEA,SAASC,kBAAT,GAA+B;EAC7B,QAAMC,KAAK,GAAGC,cAAS,CAACJ,KAAK,CAACK,MAAN,GAAe,CAAhB,CAAvB;EACA,SAAOL,KAAK,CAACG,KAAD,CAAZ;EACD;;AAED,EAAe,SAASG,YAAT,CAAuBC,GAAvB,EAA4B;EACzC,SAAOC,YAAK,CAACD,GAAD,EAAML,kBAAN,CAAL,CAA+BO,IAA/B,CAAoC,EAApC,CAAP;EACD;;ECRc,SAASC,YAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;EACpD,SAAOC,cAAO,CAACC,aAAM,CAACH,MAAD,CAAP,EAAiBG,aAAM,CAACF,MAAD,CAAvB,CAAd;EACD;;ECLD,MAAMG,aAAa,GAAG,EAAtB;EACA,MAAMC,MAAM,GAAG,QAAf;EAEA,MAAMnB,KAAK,GAAG,IAAIoB,MAAJ,CAAY,IAAGD,MAAO,kBAAiBD,aAAc,IAArD,CAAd;AAEA,EAAO,SAASG,gBAAT,GAA6B;EAClC,QAAMC,MAAM,GAAGb,YAAY,CAACS,aAAD,CAA3B;EACA,SAAQ,GAAEC,MAAO,IAAGG,MAAO,EAA3B;EACD;AAED,EAAO,SAASC,mBAAT,CAA8BC,QAA9B,EAAwC;EAC7C,SAAOA,QAAQ,CAACC,KAAT,CAAezB,KAAf,CAAP;EACD;;;;;;;;;;;;;;;;;;;;;;;;;"}