{"version":3,"file":"index.esm.js","sources":["../src/camelCaseKeys.js","../src/compact.js","../src/determineAddressType.js","../src/isValidEmail.js","../src/readableCode.js","../src/setwiseEqual.js","../src/username.js"],"sourcesContent":["import {mapKeys, camelCase} from 'lodash';\n\nexport default function camelCaseKeys (obj) {\n  return mapKeys(obj, (v, k)=> camelCase(k));\n}\n","import Type from 'type-of-is';\nimport {\n  compact,\n  identity,\n  pickBy\n} from 'lodash';\n\nexport default function compact_ (obj) {\n  const type = Type(obj);\n  switch (type) {\n    case Array:\n      return compact(obj);\n    case Object:\n      return pickBy(obj, identity);\n    case String:\n      return obj.replace(/\\s+/g, '');\n    default:\n      throw new Error(`compact does not support type ${type}`);\n  }\n}\n","import emailRegex from 'email-regex';\nimport phoneRegex from 'phone-regex';\n\nexport default function determineAddressType (address) {\n  const email = emailRegex({exact: true});\n  if (email.test(address)) {\n    return 'email';\n  }\n\n  const phone = phoneRegex({exact: true});\n  if (phone.test(address)) {\n    return 'phone';\n  }\n\n  return null;\n}\n","import emailRegex from 'email-regex';\n\nexport default function isValidEmail (email) {\n  const regex = emailRegex({exact: true});\n  return regex.test(email);\n}\n","import {times} from 'lodash';\nimport {randomInt} from '@hello10/util';\n\n// No 'O' or '0'\nconst chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'.split('');\n\nfunction randomReadableChar () {\n  const index = randomInt(chars.length - 1);\n  return chars[index];\n}\n\nexport default function readableCode (len) {\n  return times(len, randomReadableChar).join('');\n}\n","import {\n  isEqual,\n  sortBy\n} from 'lodash';\n\nexport default function setwiseEqual (array1, array2) {\n  return isEqual(sortBy(array1), sortBy(array2));\n}\n","import readableCode from './readableCode';\n\nconst suffix_length = 16;\nconst prefix = 'person';\n\nconst regex = new RegExp(`^${prefix}\\\\.[A-Za-z0-9]{${suffix_length}}$`);\n\nexport function generateUsername () {\n  const suffix = readableCode(suffix_length);\n  return `${prefix}.${suffix}`;\n}\n\nexport function isGeneratedUsername (username) {\n  return username.match(regex);\n}\n"],"names":["camelCaseKeys","obj","mapKeys","v","k","camelCase","compact_","type","Type","Array","compact","Object","pickBy","identity","String","replace","Error","determineAddressType","address","email","emailRegex","exact","test","phone","phoneRegex","isValidEmail","regex","chars","split","randomReadableChar","index","randomInt","length","readableCode","len","times","join","setwiseEqual","array1","array2","isEqual","sortBy","suffix_length","prefix","RegExp","generateUsername","suffix","isGeneratedUsername","username","match"],"mappings":";;;;;;;AAEe,SAASA,aAAT,CAAwBC,GAAxB,EAA6B;AAC1C,SAAOC,OAAO,CAACD,GAAD,EAAM,CAACE,CAAD,EAAIC,CAAJ,KAASC,SAAS,CAACD,CAAD,CAAxB,CAAd;AACD;;ACGc,SAASE,QAAT,CAAmBL,GAAnB,EAAwB;AACrC,QAAMM,IAAI,GAAGC,IAAI,CAACP,GAAD,CAAjB;;AACA,UAAQM,IAAR;AACE,SAAKE,KAAL;AACE,aAAOC,OAAO,CAACT,GAAD,CAAd;;AACF,SAAKU,MAAL;AACE,aAAOC,MAAM,CAACX,GAAD,EAAMY,QAAN,CAAb;;AACF,SAAKC,MAAL;AACE,aAAOb,GAAG,CAACc,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,CAAW,iCAAgCT,IAAK,EAAhD,CAAN;AARJ;AAUD;;AChBc,SAASU,oBAAT,CAA+BC,OAA/B,EAAwC;AACrD,QAAMC,KAAK,GAAGC,UAAU,CAAC;AAACC,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAxB;;AACA,MAAIF,KAAK,CAACG,IAAN,CAAWJ,OAAX,CAAJ,EAAyB;AACvB,WAAO,OAAP;AACD;;AAED,QAAMK,KAAK,GAAGC,UAAU,CAAC;AAACH,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAxB;;AACA,MAAIE,KAAK,CAACD,IAAN,CAAWJ,OAAX,CAAJ,EAAyB;AACvB,WAAO,OAAP;AACD;;AAED,SAAO,IAAP;AACD;;ACbc,SAASO,YAAT,CAAuBN,KAAvB,EAA8B;AAC3C,QAAMO,KAAK,GAAGN,UAAU,CAAC;AAACC,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAxB;AACA,SAAOK,KAAK,CAACJ,IAAN,CAAWH,KAAX,CAAP;AACD;;ACDD,MAAMQ,KAAK,GAAG,qCAAqCC,KAArC,CAA2C,EAA3C,CAAd;;AAEA,SAASC,kBAAT,GAA+B;AAC7B,QAAMC,KAAK,GAAGC,SAAS,CAACJ,KAAK,CAACK,MAAN,GAAe,CAAhB,CAAvB;AACA,SAAOL,KAAK,CAACG,KAAD,CAAZ;AACD;;AAED,AAAe,SAASG,YAAT,CAAuBC,GAAvB,EAA4B;AACzC,SAAOC,KAAK,CAACD,GAAD,EAAML,kBAAN,CAAL,CAA+BO,IAA/B,CAAoC,EAApC,CAAP;AACD;;ACRc,SAASC,YAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;AACpD,SAAOC,OAAO,CAACC,MAAM,CAACH,MAAD,CAAP,EAAiBG,MAAM,CAACF,MAAD,CAAvB,CAAd;AACD;;ACLD,MAAMG,aAAa,GAAG,EAAtB;AACA,MAAMC,MAAM,GAAG,QAAf;AAEA,MAAMjB,KAAK,GAAG,IAAIkB,MAAJ,CAAY,IAAGD,MAAO,kBAAiBD,aAAc,IAArD,CAAd;AAEA,AAAO,SAASG,gBAAT,GAA6B;AAClC,QAAMC,MAAM,GAAGb,YAAY,CAACS,aAAD,CAA3B;AACA,SAAQ,GAAEC,MAAO,IAAGG,MAAO,EAA3B;AACD;AAED,AAAO,SAASC,mBAAT,CAA8BC,QAA9B,EAAwC;AAC7C,SAAOA,QAAQ,CAACC,KAAT,CAAevB,KAAf,CAAP;AACD;;;;"}